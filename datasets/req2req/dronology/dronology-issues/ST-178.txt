A class to hold latitude  longitude  and altitude (LLA) coordinates

"We need an immutable class holding three doubles for latitude  longitude  and altitude (LLA).  This class should have the following data members:  * latitude - the angle north of the equator in degrees (negative angles define latitudes in the southern hemisphere)   * longitude - the angle east of the prime meridian in degrees (negative angles define longitudes in the western hemisphere)   * altitude - the distance above sea level or more precisely the distance above the surface of the WGS-84 reference ellipsoid. For this project we need this distance in meters (though traditionally  in aviation this distance is measured in feet so be careful when using this class)    This class should have the following methods  * toPvec - takes no arguments and maps LLA to an X  Y  and Z coordinate in the WGS-84 reference frame.  * toNvec - takes no arguments and maps LLA to a coordinate defined by an N-vector plus altitude. An N-vector is a normal vector on the surface of the WGS-84 reference ellipsoid. This ellipsoid defines the position of sea level everywhere on Earth. By pairing this with an altitude  we can precisely define a position. N-vectors have nice properties that make dead reckoning easier and more accurate (Dead reckoning is the process of calculating a drones current position by using a previously determined position  and advancing that position based upon known or estimated speeds over elapsed time and course. See https://en.wikipedia.org/wiki/Dead_reckoning for more info). To learn more about the nice properties that n-vectors have  see this article http://www.navlab.net/Publications/A_Nonsingular_Horizontal_Position_Representation.pdf from The Journal of Navigation.     Perhaps Coordinate.java may be modified into the LlaCoordinate class we need."