{"3e417a6e-566c-37b0-8bec-92c61d2c646c":"Yes","9d617667-836e-3b0d-b40c-6eebd4edacb9":"Yes, these two requirements are related. The first requirement states that if an unrecoverable software error occurs, the DPU-CCM shall record an error to the LAST_BOOT_IVEC location in EEPROM and discontinue strobing the Watchdog Timer. The second requirement describes a public function called by any CSC (Command and Control Module) in order to report an error or event that should be included in DPU housekeeping. This function is called from interrupt context, which means it is executed while the processor is handling an interrupt. In this case, the function sets a static global variable, ccmISRError, so that the error can be enqueued later (see ccmCtrlTask()). The second requirement also mentions that the error queue semaphore has priority inversion set to reduce conflicts between multiple callers should a priority inversion situation arise. This suggests that there may be other functions or processes that also use this semaphore, and therefore it is important to manage access to the semaphore in order to avoid conflicts. Overall, these two requirements are related because they both deal with the management of errors and events in the DPU-CCM system.","5a18a2c2-9319-3ece-b1f5-04df84c9b55c":"Yes, these two requirements are related because they both deal with the configuration of the ping-pong frame limit in the DPU-TMALI. The first requirement specifies that the ping-pong frame limit should be configured at startup and can be modified dynamically, while the second requirement describes a public function called `tmaliDciFrameDepthSet` that sets the frame depth of the Ping-Pong buffers used by the DCI CSC.","e367ec33-dc5f-390a-89e7-672b107f79d9":"Yes","6e7aa69e-7436-3c2f-b3f8-49f57357157b":"Yes","2de6428e-cf44-3aa9-9aa9-7a834a74379e":"Yes","b7119b1d-6ace-3da7-8c50-f6df458a203c":"Yes","f5128f82-aa82-3239-a83a-648755d2e97a":"Yes","d8708f3d-4ce3-3cb3-a4fa-9abef34925ea":"Yes","07af6f8c-e73e-3d42-a0a1-10531639b8fb":"Yes","d58b34db-fda8-3bd8-8910-521e1e8d9c29":"Yes","010bf4fb-4116-341e-81b8-baf3133e84a6":"Yes","b20e4947-dfa8-3575-9ecc-9c2b4ff31772":"Yes.","400e059e-bb53-3095-b88d-ce1285851a05":"Yes","94de6555-06ad-3522-9869-67fcced44c0c":"Yes, these two requirements are related because they both deal with the handling of errors in the TMALI software. The first requirement states that the DPU-TMALI should use SCM_DCI_SR and ERRNO to decode errors and place them on an error queue for DPU-CCM. The second requirement describes how the TMALI task should handle errors by re-arming the hardware to swap the Ping-Pong buffer when ready, setting an error flag so that the tmaliTask() can recover, and giving the semDciWait semaphore to awaken the tmaliTask() even though it is likely already awake. Both requirements are related because they both involve handling errors in the TMALI software and ensuring that the system remains operational despite any issues that may arise.","24ee0c91-372e-3369-af1f-986c59b5c434":"Yes","9a008e5b-ef0f-3439-ab0d-6735eb472579":"Yes, these two requirements are related. The first requirement states that when a command is rejected by the DPU-CCM, it should report an error in DPU_HK indicating the byte-code of the command being rejected in the LSB of the errno as described in 03691-DPUSDP-01.\nThe second requirement states that public functions are called by any CSC to report errors or events that should be included in DPU housekeeping. This routine is also responsible for replacing frequently occurring errors with a special repeat error code, which follows a normally reported error code to indicate that the normally reported error code previously reported has occurred more than once in the last high rate reporting period.\nTherefore, these two requirements are related because they both deal with the reporting of errors and events by the DPU-CCM, and how they should be handled and recorded.","e4ca1d69-558e-3b2b-b09a-7f81478abe3e":"Yes","24876e15-a28a-3823-96cc-0624bf41a182":"Yes","866f7b93-6ac0-3153-b894-348d2803704d":"Yes","ed5b75e1-9f3b-396c-9393-b2bb24bebbdc":"Yes","98f886a5-9e74-35c5-8ac6-516370a16ccb":"Yes","fa762bfe-2c7b-3e74-88cb-7584f134553c":"Yes","2bcd5909-2c37-3907-abd5-d09824a6d2be":"Yes","a77771e9-adf3-33be-babd-9143f0a4eb54":"Yes","88bc3254-2d5c-33be-9a23-0186a1be33e4":"Yes","f00e9a5c-7635-3fd9-82c5-f4f1452c8624":"Yes","1a607329-aedb-37c7-974a-df96ab89d9b4":"Yes","38e1e7a1-8b69-35fc-afcd-54b6990c20d2":"Yes, they are related. Both requirements deal with memory handling in some way. The first requirement mentions large memory loads and dumps, while the second requirement discusses uploading data to the DPU using either the \"Memory Poke\" or \"Memory Upload\" commands.","c2505708-5f25-3ec7-99e3-729aceb32707":"Yes","4201227a-f02a-36c3-a2ed-23f11c2cc944":"Yes","fc3cdad1-2a65-3868-aff3-a50829178efd":"No","1eed459c-6317-39f5-9d0c-5a7072cdc535":"No","1dc73eb4-edd4-3586-aed9-8c017882f659":"Yes.","be603c39-6431-361c-bbaf-345d9fddc90b":"Yes","97fb2575-24d3-3c39-af6a-9288bde15c9c":"Yes, these two requirements are related because they both deal with the handling of errors in the TMALI software. The first requirement specifies that the DPU-TMALI should configure the ping-pong frame limit at startup and allow it to be modified dynamically, while the second requirement describes how the TMALI task should handle errors that occur during data transfer to the queue. Both requirements are related because they both involve the handling of errors in the TMALI software, which is a critical aspect of ensuring the reliability and performance of the system.","e1f6adce-e560-3eea-9888-59db06bf05eb":"Yes","6235149c-0e0e-33c2-8a0f-cc7da9947fb2":"Yes","6124cb3c-1e3b-3c25-8eb0-28a7771d2317":"Yes","a69bc36e-f637-3896-a84e-fe7d5327a873":"Yes","2bcefb51-1fc4-35f0-aa3d-31d9ecfa2e23":"Yes","ed1bea46-c2d8-3623-bdc0-f0a1cd07a8e8":"Yes","63854c2d-eeda-31ab-8674-2970fab4abf2":"Yes","49296149-fbac-3858-bf7b-3350b406a003":"Yes","a9fc526d-6109-3c51-8e36-ef590c6020fe":"Yes, these two requirements are related because they both deal with the TMALI CSC and its interaction with other components of the system. The first requirement specifies that the DPU-TMALI shall allocate a ring buffer for storing incoming frames of data, while the second requirement describes the public functions of the task that initializes the TMALI CSC and reads data from the DCI and stores it in the TMALI buffer.","941ee196-3dff-312d-bf0d-2807ad1dca21":"Yes","be20a57e-2047-300a-8dd5-bb15963e53fa":"Yes","74e389c8-d05b-3889-a7c0-63c9cbc1a37b":"Yes","33578d1b-e71b-378f-b8ce-144fa719d2a9":"Yes","c56ece74-1c3e-36fa-9a5a-647500d075dd":"Yes, these two requirements are related because they both deal with the handling of errors in the DPU-TMALI software. The first requirement states that the DPU-TMALI should install a callback routine to respond to the DCI Error Interrupt, while the second requirement describes how the TMALI task will handle an error condition by setting an error flag and re-arming the hardware to swap the Ping-Pong buffer. Both requirements are important for ensuring that the software can properly handle errors and recover from them in a timely manner.","22807e82-619d-33b8-a7a2-6851ee668610":"Yes","8aa83722-f2ef-3c28-b4a2-11c086a3358f":"Yes","3355dd23-8788-3555-b2b5-7b4ddacdb847":"Yes.","e4cc3775-bd19-33d5-b18a-4dc475274944":"Yes, these two requirements are related because they both deal with the transfer of data from the DCI hardware to the TMALI software. The first requirement states that the starting address of the event ring buffer should be placed in TMALI_HK, while the second requirement describes how the tamliTask() function should re-arm the hardware to swap the Ping-Pong buffer when ready. Both requirements are related because they both involve the transfer of data from the DCI hardware to the TMALI software and the management of the event ring buffer.","1cfa1147-98f2-3489-98d7-8e24ac459162":"Yes","4cd2da8f-0a44-36af-8d94-31c0421d19c4":"Yes","6ac04ec9-1523-336c-b2eb-ad647133d070":"Yes, these two requirements are related because they both deal with the handling of commands in the DPU. The first requirement specifies that the DPU should check the length of a received command against an expected value from a lookup table indexed by FUNCTION code, while the second requirement describes the different interfaces through which commands can be sent to the DPU and the sources of those commands.","9a8f7ef3-708c-3cd4-9736-dc317727715d":"Yes.","f9a4ffe5-621d-398d-b567-80d1977e0f5d":"Yes","b7c42411-f507-38fd-a943-c803a02c705f":"Yes.","4f033aaf-788b-3035-b2d9-3a138d1104e3":"Yes, these two requirements are related because they both deal with the transfer of data from the DCI to the TMALI. The first requirement states that the TMALI shall be capable of making data available from the DCI to DPU-DPA, while the second requirement describes the process of transferring data from the DCI to the TMALI using an ISR and a ring buffer.","e8283b8f-1185-3bc4-992b-05dd086da814":"Yes","bbc9994f-ad79-3989-a64f-0816bd07aaab":"Yes","a748fde3-440e-380f-88ca-236bd78a7478":"Yes","9927a479-77a7-3b56-8895-1ffe351596c8":"Yes","6484e233-803e-30be-977b-a27cccea533d":"No","53351a0d-cb35-3e6f-8d66-0ebe815f9cca":"Yes, these two requirements are related. The first requirement states that the DPU-TMALI shall utilize SCM_DCI_SR and ERRNO provided by DPU-DCI to decode errors and place them on an error queue for DPU-CCM. The second requirement describes a public function called \"ccmISRError\" which is used to report errors or events that should be included in DPU housekeeping. This function is called from interrupt context, so it sets a static global variable ccmISRError to indicate that the error can be enqueued later (see ccmCtrlTask()). The second requirement also mentions that the error queue semaphore has priority inversion set to reduce conflicts between multiple callers should a priority inversion situation arise. This suggests that the first requirement is related to the implementation of this public function, as it involves using SCM_DCI_SR and ERRNO provided by DPU-DCI to decode errors and place them on an error queue for DPU-CCM.","532ac42c-1462-38cb-8f01-381a75d3860c":"Yes, these two requirements are related because they both deal with the handling of errors in the DPU-TMALI system. The first requirement states that the DPU-TMALI should install callbacks for handling all DPU-DCI interrupts, including Error interrupt, Ping-Pong Timeout interrupt, and Ping-Pong Complete Flag interrupt. This means that the DPU-TMALI should be able to detect and handle errors in a timely manner.\n\nThe second requirement provides more details about how the DPU-TMALI should handle errors. It states that if TMALI does not finish transferring the data from the ping buffer before the pong buffer is full, the DCI Driver will issue an error interrupt, invoking the tmaliDciErrorReportedISR(). This means that the DPU-TMALI should be able to detect and handle errors in a timely manner, even if they occur during data transfer.\n\nOverall, these two requirements are related because they both deal with the handling of errors in the DPU-TMALI system, and they provide more details about how the DPU-TMALI should handle errors in different scenarios.","3d0f4c74-80d5-36fe-9892-daa237d25046":"Yes.","420a4ac8-8d43-3a82-a69f-6aefcbb7f3c9":"Yes, these two parts of software development artifacts are related. The first requirement is a functional requirement that specifies how the DPU-CCM should count consecutively reported errors and replace them with a new error code sequence if the count exceeds 250 for a particular reporting period. The second requirement is an implementation requirement that describes how the public function `ccmReportError` works, including its behavior when called from interrupt context and how it replaces frequently occurring errors with a special repeat error code.","1c7188e8-4978-3ce3-a741-fedf019ee478":"Yes.","058b167e-3ccd-33d0-8850-fff89b61d0f6":"Yes, these two parts of software development artifacts are related. The first requirement is a functional requirement that specifies how the TMALI CSC should behave in terms of providing data to the DPA CSC. The second requirement is a design requirement that describes the sequence of events that occur when the TMALI CSC receives notification from the DCI CSC that a frame limit has been reached and the EVENT data is ready to be served to TMALI.\n\nThe two requirements are related because they both describe how the TMALI CSC should behave in terms of its interaction with other components in the system, such as the DPA CSC and the DCI Driver CSC. The first requirement specifies that the TMALI CSC should provide data to the DPA CSC on request, while the second requirement describes how the TMALI CSC should receive notification from the DCI CSC and then serve the EVENT data to the DPA CSC.\n\nTherefore, these two requirements are related because they both describe the behavior of the TMALI CSC in terms of its interaction with other components in the system, and they both contribute to the overall functionality of the system.","88b80e2d-5620-37aa-8bbe-8b030075dcbe":"Yes","95c152e2-f312-3ea4-b144-2bfdf3d5251c":"Yes, these two requirements are related because they both involve the handling of interrupts and data exchange between different components in the system. The first requirement mentions that the DPU-TMALI should install callbacks for handling all DPU-DCI interrupts, which suggests that there is an interconnection between the TMALI CSC and the DCI Driver CSC. The second requirement describes a normal data exchange sequence where the TMALI CSC serves as an intermediate manager of EVENT data supplied by the DCI Driver CSC and eventually delivered to the DPA CSC, which implies that there is a flow of data between these components. Therefore, these two requirements are related because they both involve the handling of data exchange and interrupts in the system.","8419c03a-e4be-3ee5-8d9c-0ef2cfc9057d":"Yes.","cc25c841-fd59-397c-8499-c3ab8926e35f":"Yes","7291618e-5b9b-3e14-a564-bd67bd5cd254":"Yes, these two requirements are related because they both involve the TMALI CSC and its interaction with other components in the system. The first requirement states that the DPU-TMALI shall install a callback routine to respond to the DCI Error Interrupt, which suggests that the TMALI CSC is responsible for handling errors generated by the DCI Driver CSC. The second requirement describes the normal data exchange sequence between the TMALI CSC and other components in the system, including the DCI Driver CSC and the DPA CSC. Therefore, these two requirements are related because they both involve the TMALI CSC and its role in managing data exchange between different components in the system.","f6bd9a51-8324-3161-8c53-ce3bf0c514dd":"Yes, these two requirements are related because they both deal with the transfer of data from the DCI to the TMALI. The first requirement states that the DPU-TMALI should be capable of making data available from the DCI to DPU-DPA, and the second requirement describes the process of transferring events from the Ping-Pong buffer to the TMALI_EVENT_QUEUE. Both requirements are concerned with the movement of data between different components in the system, and they both have implications for the overall performance and functionality of the software development artifacts.","16d071a8-1b43-3af9-9182-57e23602a85c":"Yes","28f33988-d4e9-3ae5-a66b-b2fc2d4f117b":"Yes","3bb76014-2812-3950-9b85-e1a4cc7c1ef6":"Yes","02ba12a8-e0cb-3585-aaf7-efced372d1ca":"Yes","976684be-0c96-320c-ab55-4bb3e9393343":"Yes","1b042961-5995-3d9d-a488-985c03d4d4eb":"Yes, they are related. The first requirement is for the DPU-CCM to provide a mechanism for other CSCs to report errors for inclusion in the DPU_HK, while the second requirement describes the Command and Control (CCM) CSC, which includes a Control Task that initializes the DPU FSW and spawns other tasks at bootup, monitors the execution of other tasks, and schedules the execution of other periodic tasks such as the heartbeat message and the watchdog strobe. The CCM also includes a Command Dispatch Task that receives and dispatches real-time commands received from the SCU or the ICU. Additionally, the CCM has major data structures such as a Static Data table that keeps track of the operational state and an Error/Event Queue which accumulates error and event codes which are reported by the DPU FSW.","ef4cdf0e-7d63-30eb-9498-632103df9218":"Yes, these two requirements are related because they both involve the TMALI CSC (Telephony Media Abstraction Layer Interface) and its interaction with other components in the software development artifacts. The first requirement mentions that the DPU-TMALI shall provide a function to set the current event bit ordering mode, which suggests that the TMALI CSC is responsible for managing events and their bit ordering. The second requirement describes the normal data exchange sequence between the TMALI CSC and other components in the system, including the DCI (Data Communication Interface) driver and the DPA (Data Processing Application).","a1661b21-7dfc-303a-bee5-99095e8e636c":"Yes","c0b76bcd-18e0-3ff7-ab13-a49e302a283d":"Yes","ab4950a0-bf9a-38a0-aff4-e3f69da50503":"Yes"}