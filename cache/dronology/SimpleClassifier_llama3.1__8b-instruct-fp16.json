{"83ea9c65-950d-3559-8975-8556de978cb5":"Yes.","a1721766-867c-3a1b-a408-902513e57012":"Yes.","947f36f9-e12e-3445-bec7-766b74cbbec5":"Yes. \n\nBoth requirements are about computing distances, but in different contexts: one for any two coordinates (general case), and another for a specific use case where there is a target waypoint assigned to the UAV.","55a4efbb-b9e5-3340-a254-ea625ebb3d65":"Yes.","e7c0e850-b480-3291-a43d-7521879ee833":"Yes.","953b806f-b523-3da3-9b60-eed3dfe879fe":"Yes.","87a167d7-8824-3071-ac7c-1e85c7d27a9d":"Yes.","4aa3477c-73eb-3012-9283-51ce38d7a995":"Yes.","88df03c2-40a6-36ce-a009-55aacfdd360f":"Yes. \n\nThese two requirements are related because they both involve the assignment of flight plans to UAVs, but from different perspectives: one involves unassigning a flight plan when requested (removal), and the other involves automatically assigning an unassigned flight plan to a UAV.","1d3d9b3c-2d21-382a-b2e1-4dfabd04bbde":"Yes.","498f1842-bd32-3f3b-badb-28f6548088be":"Yes.","946cbcbc-34b3-3519-92ca-dea7d67a9a7c":"Yes. \n\nBoth requirements seem to be about the CoordinateSystem class, and both involve some form of transformation or calculation involving coordinates. The first requirement is about calculating distances between two points, while the second is about converting coordinates from one representation to another (n-vectors). This suggests that they are related in terms of functionality or purpose.","5451d065-ffe0-339c-a60b-b9232e09f5d9":"Yes.","ab6acfcf-30dd-3d94-a318-0724de37e6dd":"Yes.","95d1a32d-69fe-3e9a-842c-826382180110":"Yes.","6be5d525-0374-3ed9-99b3-587c0b8745eb":"Yes. \n\nThese two requirements are related because they both involve the UI Middleware interacting with flight routes, one for modification and creation, and the other for retrieval. They seem to be part of a larger system that deals with managing flight routes through the UI Middleware.","c265431a-e018-3979-95a9-1bb321b1edb4":"Yes. \n\nBoth requirements seem to be related to monitoring messages in the context of Dronology, one for publishing and another for formatting specific types of messages (UAV Monitoring Messages).","9a6ab387-8723-3504-8844-0eb408e4250c":"Yes. \n\nBoth requirements are about coordinating and controlling multiple Unmanned Aerial Vehicles (UAVs), which suggests a relationship between them, likely as part of a larger system for managing drone operations.","b029ea08-6597-309a-97b1-290dc6da3ad4":"Yes.","bfc44dd6-f1e7-3a5f-a0e6-fbbaddab0588":"Yes. \n\nBoth requirements are about the MissionPlanner, which suggests a connection between them.","829d6152-ac68-3580-9662-c7b64ed32a23":"Yes. \n\nThey are both requirements for simulating flight in different scenarios (landing and taking off) and involve moving a UAV to specific altitudes based on its location.","2a3f5f0d-154b-322f-905a-bd719f645012":"Yes. \n\nBoth requirements seem to be about creating/ persisting routes, but from different perspectives (UI and middleware). They are likely related as part of the same feature or functionality in the software.","81e4270c-2197-3035-b717-85f156c0618d":"Yes.","c6472c8c-5e82-3db9-a16c-051eaab24868":"Yes. \n\nThe two requirements are related because both involve notification of some kind, and both mention the RealTimeFlightUI component. The first requirement mentions emergency notifications, while the second involves registering for flight plan events. Both seem to be part of a larger system that provides real-time information about flights.","19f8f33a-c8ed-3dd7-a50c-64ebdcf97200":"Yes.","06f984e5-7526-3c47-a25a-3169b85be02c":"Yes. \n\nThese two requirements seem to be related as they both deal with updating the user interface (UI) with the location of Unmanned Aerial Vehicles (UAVs). The first requirement mentions allowing users to follow one or multiple UAVs on a map, and the second requirement explains how this is achieved by periodically requesting current locations from the middleware and updating them on the map.","f3408128-7a16-36a6-af86-15ad9b363782":"Yes.","84a63b54-23f3-334d-b843-a02e8265ba00":"Yes. \n\nThe two requirements seem to be related because they both involve UAVs (Unmanned Aerial Vehicles) and appear to be part of a system that manages their registration and activation. The first requirement deals with storing metadata about registered UAVs, while the second requirement involves activating a registered UAV based on its ID.","6216cdba-b384-3119-bbb4-672f46b924d7":"Yes.","9eb10dcb-d007-3fad-96a5-e8ba1550b363":"Yes. \n\nBoth requirements are related to the UAVActivationManager, which suggests that they are part of a larger system or module that deals with activating Unmanned Aerial Vehicles (UAVs). The first requirement focuses on limiting the number of activated UAVs, while the second requirement deals with rejecting non-registered UAVs for activation.","ac41e07e-b0d7-307e-b871-c7adee44e306":"Yes. \n\nBoth requirements are about handling flight plans, one for cancelling and another for viewing. They seem to be part of the same system or module, likely dealing with drone-related tasks. The presence of similar terms like \"UI\", \"_RouteAssignmentUI_\", \"UAV_FlightInfo\" suggests a connection between them.","102a967a-f18c-319a-b9e3-fd9535912cc2":"Yes.","021ed722-c054-3ff0-8aab-8b346b7d4eaa":"Yes. \n\nBoth requirements seem to be about managing and executing flight plans, which suggests a connection between them. The first requirement mentions \"predefined FlightPatterns\" that the MissionPlanner should manage, while the second requirement talks about importing saved mission plans in JSON format for execution by the MissionPlanner. This implies that these two requirements are related as they both pertain to managing and executing flight plans, albeit from slightly different angles (one focusing on predefined patterns and the other on imported missions).","2fc682b4-28ea-3a60-b978-06688ba39a9d":"Yes. \n\nThese two requirements seem to be related because they both refer to the ObjectAvoidance system, which suggests that they are part of a larger requirement set for this system. The first requirement specifies what the system should not do (issue commands outside its capabilities), and the second requirement specifies what it should do (retrieve UAV properties and check directives against them).","ab33ec37-3e99-39f8-8de1-1e4ce8722f85":"Yes.","cfb8f154-c13a-39e9-85fe-eecd4acc37d8":"Yes. \n\nThese two requirements seem to be related because they both involve communication between a Ground Control Station (GCS) and a GCS Middleware, specifically regarding the transmission of information about Unmanned Aerial Vehicles (UAVs). The first requirement describes what the GCS Middleware should do with messages it receives from the GCS, while the second requirement describes what the GCS should send to the GCS Middleware.","dd1c218c-e998-3fc5-b8cc-ecfd69e7a542":"Yes. \n\nThey are related because both requirements deal with a \"lost connection\" scenario, but from different perspectives: one is about the GCSMiddleware notifying Dronology when it loses connection to the GCS, and the other is about the GCS notifying the GCSMiddleware when it loses connection to an UAV.","8de841c9-d19a-338b-8011-34968e55d541":"Yes.","b0ddf8e2-6cce-3e88-ab9b-6c92c9d62ba4":"Yes.","aa551ec8-c67f-3bc1-a87d-b8e6b37b3e07":"Yes.","e954dd49-9f65-3232-89e6-b60b43ec1057":"Yes. \n\nBoth requirements seem to be related to a specific state of a UAV (Unmanned Aerial Vehicle) - \"hover in place\" mode, and how it interacts with other components of the system when in that state. The first requirement specifies what should happen when the UAV reaches the end of its flight plan if there are no more plans pending, while the second requirement deals with what happens to waypoint directives for a UAV that is currently hovering in place.","6d24c6af-e173-3751-87e1-ad057f80a2de":"Yes.","1fee0fea-9a8f-3dbc-a1a2-6de75c992f41":"Yes. \n\nBoth requirements seem to be about sending waypoints during a flight plan, but from different perspectives (one at the start and one during execution). They appear to be complementary parts of a larger requirement for waypoint management in a flight plan.","bba7dc56-e12e-3382-8a7c-e6410f90e75a":"Yes. \n\nThese two requirements seem to be related because they both involve the Object Avoidance system, which suggests that they are part of a larger system or feature that deals with object avoidance in UAVs (Unmanned Aerial Vehicles). The first requirement describes what happens when an object is detected, and the second requirement describes what happens after the object has been avoided.","19728163-c3a4-3f91-b8b2-a77344844380":"Yes.","93787f54-7852-3af6-86e4-138e13bce711":"Yes.","f2fea6bf-ea70-3c72-93df-07eade62ee1b":"Yes.","1bb979e6-c3f2-3a1e-962b-0c6897819861":"Yes.","9c89f3da-0874-360f-82e9-e4369a91547e":"Yes.","f0d39029-e184-34e0-9fde-7270fa98bf86":"Yes.","760b33e1-0fb0-33ce-ae30-56c82f22baef":"Yes.","36dd3aa4-fbcc-38ea-9f7c-6dc3ff9ecfa5":"Yes. \n\nBoth requirements are about cancelling something (mission or flight plan) and both seem to be related to the same system or application, likely a MissionPlanner for UAVs.","19f5ba44-ddad-323f-b35b-ebae9f4c92b2":"Yes.","aca32892-7eaa-3c29-817e-9fa06c4e8944":"Yes. \n\nBoth requirements are about displaying information on a map, which suggests that they are related to the same feature or component of the software. The first requirement mentions supporting different types of map layers, and the second requirement talks about displaying multiple routes on the map. This implies that the MapComponent is likely responsible for rendering the map and its various features, including routes and map layers.","74701b66-332e-339a-81e6-83486031bfd8":"Yes.","2c04f504-f385-3f27-9571-6ca718343974":"Yes. \n\nThey are both requirements for an Object Avoidance system in a UAV (Unmanned Aerial Vehicle) context, likely part of the same software development project. The first requirement describes the functionality of reaching a destination while avoiding objects, and the second one specifies that the system should maintain a list of UAV states to support this functionality.","f6c70856-a7a3-3290-bbea-2dcdea159a62":"Yes.","bcb5bc22-71db-34e4-bfb4-3b0e1b36ab70":"Yes.","ea49e4a3-432a-364f-8b73-09c84f5850e1":"Yes.","d6de5816-c719-3eaf-a01e-426f884c2847":"Yes.","915a4cb1-8bd9-31e7-a333-a3b8e267b6b4":"Yes. \n\nBoth requirements seem to be related to obstacle avoidance systems for Unmanned Aerial Vehicles (UAVs). They describe specific behaviors of the system when it is active, and when it should stop issuing directives. The first requirement states that if the onboard Obstacle Avoidance system is active, it should not issue directives. The second requirement describes what happens after the UAV has received evasive directives and is no longer in close proximity to an object - the ObjectAvoidance system stops sending directives and the UAV continues towards its original destination.","07513dcd-8f9b-3b3c-900b-a9edd3706b51":"Yes. \n\nBoth requirements describe interactions between a \"client\" and the \"_UIMiddleware_\", indicating that they are related in terms of functionality, scope, or context.","7acb6788-a468-3ade-aede-1cfd1be46471":"Yes. \n\nBoth requirements are related to the UAVActivationManager, which suggests that they are part of a larger system or module dealing with Unmanned Aerial Vehicles (UAVs). The first requirement deals with deactivating physical UAVs and cancelling flight plans, while the second requirement deals with rejecting non-registered UAVs. These two requirements seem to be related in terms of ensuring proper management of UAVs within the system.","89826bdd-f68c-349b-886b-8aa27de7de24":"Yes.","8a3627d7-3575-3180-ade1-a8291f914666":"Yes.","036cdba2-6324-39e8-b0d3-41c537d8d590":"Yes. \n\nBoth requirements seem to be about the Ground Control System (GCS) Middleware, specifically its interaction with a ground station and Dronology. They appear to be discussing different aspects of this interaction, but are connected by their focus on the GCSMiddleware.","5c7341ad-eb0f-3dbd-8d30-a6bb8a9ab5c5":"Yes.","8fdffabf-4041-3854-8dcd-4858cd09b933":"Yes.","0b6dea31-ba6c-3e91-a76a-bb81da27ff50":"Yes. \n\nThese two requirements are related because both involve actions that can be taken by the InternalSimulator in relation to the UAV, and both seem to be part of a simulation process for a drone (UAV). The first requirement is about simulating takeoff, while the second is about simulating landing.","a2c5c52d-c017-3d70-a615-e7cdb872bae5":"Yes.","f9ec03fa-40df-344e-8de4-4dfea17b7953":"Yes. \n\nBoth requirements seem to be about monitoring and receiving messages in the context of Dronology components, suggesting that they are related to the same feature or functionality.","c3d68c2c-efde-389c-9ecb-8be14853496a":"Yes.","ac2c990b-b2e7-37f1-b063-9e7d5f1bcda2":"Yes.","b5863702-2dec-3542-8a4f-6466a1601c5f":"Yes.","22a24fa0-df94-3682-a4f0-9c345a54dcdc":"Yes.","60f1480c-7013-3f9e-9765-ac33c9f5ab69":"Yes.","24833b28-3a2d-3215-997a-9798518a792d":"Yes.","bee37b7a-084e-3ab5-adc5-768eea41080c":"Yes.","fd8e1cb6-6807-36b5-a256-137b39947856":"Yes.","a8691c09-aeca-3e88-808b-6993a2897425":"Yes.","5061a19f-e052-3cad-805b-a9b93e1c8258":"Yes.","edd9ea97-f0ef-37c1-b492-550164c0955a":"Yes.","364db069-05d0-3438-8d09-4344d05b1ff6":"Yes.","a4fcd2e8-7025-3349-96fa-3380e70b57c7":"Yes.","171557b6-8fdf-3bb5-b2f3-2baf4348c06d":"Yes.","172be02a-7d86-37af-aa06-a845f71e2ddc":"Yes.","c37d08f1-bf45-34cc-993a-ea6dd41e9eb2":"Yes.","1cb27fbb-1ba3-3a72-b71a-474a4ce85d68":"Yes.","58e122a0-6b90-3111-9bb5-9b2591456ccd":"Yes.","acb3215b-3840-3615-a089-fd91d6e695f9":"Yes. \n\nBoth requirements are about waypoints in a flight plan, one for defining them and another for handling when a UAV reaches them.","b2739aae-af9c-3fe5-b862-4566f8ae49ef":"Yes.","5132b839-7a7d-3e7d-9f21-a4d79bc2775a":"Yes.","174a8df7-5a37-3a34-9467-550b61a28535":"Yes.","01cf933a-4e16-3aad-8af6-98e7656713e0":"Yes. \n\nThe two requirements seem to be related as they both deal with publishing monitoring messages, albeit from different perspectives: one requirement focuses on receiving messages (from any Dronology component), while the other describes what a monitoring message should contain.","252f700a-493a-35f6-8641-277e4bb6340c":"Yes. \n\nThese two requirements seem to be related in that they both involve communication between a Ground Control Station (GCS) and a Unmanned Aerial Vehicle (UAV), as well as a middleware component. The first requirement involves the GCS forwarding commands from the middleware to the UAV, while the second requirement involves the GCS sending the UAV's coordinates back to the middleware. This suggests that they are part of a larger system for controlling and tracking the UAV.","e83c04dc-f2bc-3c39-8ea5-8dfbd4bc120a":"Yes.","3f4c32d5-c32c-39c2-8695-953849ea923d":"Yes.","0918359d-165a-3904-affc-28811c8f14d8":"Yes. \n\nBoth requirements seem to be about communication between a Ground Control Station (GCS) and a Unmanned Aerial Vehicle (UAV), mediated by GCS Middleware, suggesting that they are part of the same system or process. The first requirement is about sending commands from the GCS to the UAV, while the second is about transmitting properties from the UAV back to the GCS.","35c6ea9a-0495-3b6a-a328-62704e617983":"Yes. \n\nBoth requirements are related to object avoidance in a UAV (Unmanned Aerial Vehicle) context, suggesting that the software development is for an autonomous drone navigation system. The first requirement focuses on ensuring the UAV reaches its destination while avoiding obstacles, and the second requirement deals with computing distances between UAVs to facilitate this avoidance.","2be0ed68-3ee9-34be-a0d7-1ceea5c74f97":"Yes.","cc0542a0-1f30-3892-ac47-4fbd0f3a2365":"Yes. \n\nThe two requirements are related because they both describe scenarios where users (or clients) will be notified of emergencies, albeit from different perspectives: one is a UI-level notification and the other is a middleware-level registration for notifications.","a22bed4e-dd62-3d0d-9a9f-3ec285a72a29":"Yes. \n\nBoth requirements are about displaying information on a map, one about different types of maps and another about displaying UAVs on the map. They seem to be related to the same system or feature.","d1f18d6c-0f01-33e5-813f-fb6c72f7cffe":"Yes.","85d01ac7-bbde-3bb7-ab58-3f670e3c400b":"Yes.","2e487d51-f293-30ea-af12-5c70d7bd9edb":"Yes.","46baa283-a632-314a-8542-89c51a0d764a":"Yes.","c8097f73-f004-3846-97c0-ee76570ec50b":"Yes. \n\nThe two requirements are related because the first one mentions forwarding a monitoring message to \"all subscribed clients\", which implies that there must be some mechanism for clients to subscribe to receive these messages, as described in the second requirement.","94add82b-a847-3025-8906-31244b1f7a95":"Yes.","08ed7416-62a5-3599-8927-7aba2357c167":"Yes.","306312b3-a92e-329c-8f95-b36b49614ec1":"Yes.","e50a4ca3-6ee9-3831-9909-6fd9bc2664b7":"Yes.","ee1d9d83-347e-3811-a4c4-fd0c7def2a2f":"Yes. \n\nBoth requirements are about the Route Creation UI, specifically dealing with waypoints. The first requirement is about distinguishing between different types of waypoints (start, end, and intermediate), while the second requirement is about creating, modifying, and deleting waypoints in visual mode. They seem to be related to the same feature or functionality within the software.","0cfed8e4-5ac0-388e-ad58-40d9ca486ed8":"Yes.","c75fbdb5-734f-305a-8fbe-aeaf65d7e56d":"Yes.","fbe04f22-0c52-3508-a8b8-62951047849c":"Yes.","f599162f-18df-3043-9e2f-caaaba678f4f":"Yes.","7878cce9-aa83-3770-b71c-cffac65f4561":"Yes. \n\nBoth requirements are about interactions between the UI and other components (UAV, UIMiddleware) in the system, suggesting that they are part of a larger set of requirements for the UI's functionality.","0e4d93f9-0be4-3d4f-8838-98fc95a805a4":"Yes.","7a0b80d4-6892-3861-84cf-9b39d390cd1a":"Yes. \n\nBoth requirements are about notifications, one for emergencies and another for low battery levels, which can be considered an emergency situation as well.","b7c70dcd-627f-3922-a48e-13a9060b4ee2":"Yes.","2c35f8e7-2a50-3e44-9928-a2226beeb268":"Yes.","6a22eb18-a24f-3fc2-b20d-4e0d55b0c358":"Yes.","2f61c261-0de6-344e-b6ce-7eb65118d56b":"Yes.","4c50c933-faf1-338f-b096-8693cd09c5e5":"Yes.","1bea1e71-e96f-302a-8e39-86663706c72a":"Yes.","bdac906c-a125-38d0-9d0a-4553ef2feaf1":"Yes.","ea292651-cb6d-34df-8884-96149ac33c8a":"Yes. \n\nBoth requirements seem to be about communication between a Ground Control Station (GCS) and GCS Middleware, specifically regarding the reporting of newly connected Unmanned Aerial Vehicles (UAVs). The first requirement is about notifying when a new UAV connects, while the second is about transmitting properties of the UAV once it's connected.","ac389e44-dedf-3c5d-a319-2286948eaa55":"Yes.","44663d7c-e98e-3a9f-837c-ccd356e09343":"Yes. \n\nThese two requirements seem to be related as they both involve communication between the GCS (Ground Control Station) and the Middleware, specifically regarding commands and coordinates of a UAV (Unmanned Aerial Vehicle).","89fb8ebc-c0ec-3e8c-8df8-4b6cb456aa31":"Yes.","b87d61fa-8b4a-3b1d-bff1-8ef47e975abc":"Yes. \n\nBoth requirements are about handling connections between GCS (Ground Control Station) and other entities, either a middleware or a UAV (Unmanned Aerial Vehicle). They both involve closing or deactivating connections under certain conditions.","c5c19a48-4c00-393c-b8d7-d45a71d71ca0":"Yes. \n\nThey appear to be two different scenarios for assigning flight plans to Unmanned Aerial Vehicles (UAVs), one automatic and the other manual, but both are related to the same process of assignment.","f0f029c2-124a-359b-8b71-c6480ff5398e":"Yes. \n\nBoth requirements are about cancelling plans, one for a UAV's current flight and another for a mission plan. They seem to be related in terms of the cancellation process.","84ed234a-8d23-3e58-8afd-497b36e23133":"Yes.","a289f405-085b-32fb-bab3-6fe3df985151":"Yes. \n\nThey both seem to be about assigning routes to Unmanned Aerial Vehicles (UAVs), one automatically and the other manually by the user.","36933e3d-796f-398e-935e-07cd9036edb1":"Yes.","3fac8e37-43be-3a9e-a9e2-7d0647c5075f":"Yes.","018feeda-755b-3a2c-8acb-e61caac461a8":"Yes. \n\nThese two requirements seem to be related because they both involve communication between a Ground Control System (GCS) and an Unmanned Aerial Vehicle (UAV). The first requirement states that the _VehicleCore_ should support UAVs connected via GCS, implying that there is some kind of interaction or data exchange happening. The second requirement further clarifies this by stating that the GCS should transform commands into a vehicle-specific format, which suggests that the GCS is sending commands to the UAV and needs to adapt them according to the specific requirements of each type of vehicle.","8b4edc17-1d05-3134-ad96-e83c9b5e4d16":"Yes.","6b0fa847-1877-3415-894b-affee5569a69":"Yes.","2c823515-1e84-3f2e-82e4-bfff436fdcb6":"Yes.","2a8a6d27-92bb-3937-8b47-b3a8e7f78ca2":"Yes.","32f55249-9ecd-3bc8-aa5d-204ea50a2874":"Yes.","a7496059-8be8-3e77-b29a-52ab9ba3dea4":"Yes.","f015e582-6440-31af-8b33-d1b63f6b72d2":"Yes. \n\nThese two requirements seem to be related because they both involve the UAVActivationManager and appear to be part of a larger system that manages UAVs (Unmanned Aerial Vehicles). The first requirement deals with limiting the number of activated UAVs, while the second requirement deals with activating registered UAVs.","dbd26205-94be-33aa-82b6-c4a2d9fb92b8":"Yes.","57289bcd-c445-3604-b610-126a055669fb":"Yes. \n\nThe first requirement describes retrieving and distributing monitoring messages, while the second one specifies what those messages should contain. They are complementary and seem to be part of the same system's requirements.","f64f075d-49e4-3a40-87e9-b74d4cce2c7f":"Yes.","fd5b455e-6af8-36f7-9671-1212f731101c":"Yes. \n\nBoth requirements are about assigning new flight plans, one upon completion of previous flight and another when there's no UAV assigned for a flight plan. They seem to be two different scenarios that can trigger the assignment of a new flight plan.","6d94f076-8a6a-305f-9190-ff3224eab35a":"Yes.","1cc594e8-c55f-3528-bede-e893aabf67aa":"Yes. \n\nBoth requirements are about the UI Middleware, and both seem to be related to managing routes for flights (one is listing existing routes, the other is assigning waypoints from a route to a UAV). They appear to be part of the same feature or functionality within the software.","2cead43c-c888-3360-8138-56beff2d3dec":"Yes.","cdd89145-340a-3772-8543-9f117e0834b4":"Yes.","1ba19cd5-aaae-3cbc-8e1a-e17474936e5c":"Yes. \n\nThese two requirements are related because the first one specifies that only one UI client can control a UAV at any given time, and the second one explains how the UIMiddleware will handle this by monitoring the liveness of clients holding control locks on individual UAVs. This suggests that the UIMiddleware is responsible for enforcing the single-client-per-UAV rule mentioned in the first requirement.","4feb84d5-5f88-347e-b091-86aa2e1c0b66":"Yes. \n\nThese two requirements are related because the second requirement (reordering of UAV's flight queue) is likely necessary to implement the first requirement (managed flight plan queue), which implies that the SingleUAVFlightPlanScheduler needs to be able to manage and prioritize the pending flight plans for each UAV.","cfc87ebb-69a4-327d-abbb-1c4b00ae10f2":"Yes.","fe55d003-a651-3587-8091-894af06889ca":"Yes.","d4207aef-b725-3929-91fc-cff421f52745":"Yes.","024a0757-f1fa-30f0-be97-72e3bb17505a":"Yes. \n\nBoth requirements seem to be related to the initialization and setup of the VaadinUI, specifically dealing with loading configuration and requesting information about activated UAVs upon loading. They appear to be part of a larger process that involves setting up the UI after it's been activated.","f7a22607-a7c8-3b70-b21d-75d55d2e2983":"Yes.","4a86ddeb-298a-3ecc-9249-7a99ea66c38e":"Yes. \n\nBoth requirements seem to be related to a drone (UAV) navigation system, specifically dealing with returning home and continuing to an original destination after evasive maneuvers. They appear to be part of the same software development project for managing drone flight paths and safety protocols.","504399f5-6395-34f6-a0e9-577527e90f3d":"Yes. \n\nBoth requirements seem to be related to the management of Unmanned Aerial Vehicles (UAVs) by the _UAVActivationManager_. The first requirement deals with deactivating a physical UAV and cancelling its flight plans, while the second requirement is about activating a registered UAV.","2b295792-7b4c-36fd-b804-84468daeed2e":"Yes. \n\nThese two requirements seem to be related as they both involve the same entity (UAV) and are likely part of the same system or feature, possibly a user interface for managing UAVs and their flight plans. The first requirement is about displaying details of a selected UAV, including its active flight plans, while the second requirement is about assigning routes to a UAV from an available list.","304c65dc-5353-3e25-8c22-e6c50635fffc":"Yes.","261a7837-6584-3c1b-9b84-7a27dd898f43":"Yes. \n\nThey appear to be related because both requirements are about specifying information for navigation, specifically waypoints and directions between them. The first requirement is about defining waypoints with coordinates (longitude, latitude, altitude), while the second requirement is about specifying the direction between two waypoints using a velocity vector from the first coordinate.","bb7a3f60-2493-3127-a3b9-5ddf39340f55":"Yes.","54de96b1-f31a-33a6-8e5f-92ff923f0f14":"Yes.","7bc2654c-efd3-357e-a2ef-e930501781bf":"Yes.","e1cbdb65-82c2-3b3c-bfbb-74cd7e49b891":"Yes. \n\nBoth requirements seem to be related to the Object Avoidance system in a UAV (Unmanned Aerial Vehicle) context, suggesting that they are part of the same software development project or module. The first requirement outlines an action the ObjectAvoidance system should take when it detects an object near the UAV, while the second requirement specifies what information the ObjectAvoidance system needs to maintain for its operation.","7281fe17-254c-3b7d-afc8-37b399eec71e":"Yes.","c9dd0c3e-515f-392d-a61d-69b436dba555":"Yes.","2a59cf20-3c84-3dbd-a251-9654edabe96d":"Yes.","150ecd8b-a306-3052-9d6a-8ef171bc8fab":"Yes.","08444d8e-6344-3fdf-b906-5cb910730855":"Yes.","3aa20fbd-ea48-3803-9803-a152335a506b":"Yes.","9e70483d-a88c-37e6-ab1f-2d208084377a":"Yes. \n\nThe second requirement is a specific instance of the first one, as it describes how to calculate distances (the subject of the first requirement) and what accuracy level should be achieved in that calculation.","8bed0e55-55e1-3243-ba63-8efeee5b6486":"Yes. \n\nThese two requirements seem to be related because both of them involve the _FlightRouteManager_ class, which suggests a connection between the two requirements. The first requirement is about persisting flight routes, and the second one is about validating new or modified flight routes before they are persisted. This implies that the validation requirement is likely a prerequisite for the persistence requirement.","cb6dece1-d1e8-3fc3-8e6b-3af6f26d4dcf":"Yes.","12998bb9-9774-3547-aea2-857456c42272":"Yes.","568f8560-d827-3569-90e4-4efb9100313b":"Yes. \n\nThese two requirements seem to be related because they both involve storing and displaying information about Unmanned Aerial Vehicles (UAVs). The first requirement focuses on storing UAV metadata, while the second requirement is about displaying specific information about activated UAVs. This suggests that the _UAVRegistrationManager_ might be responsible for collecting and storing this data, which would then be used to display it in the UI as described in the second requirement.","23d04a2d-3529-34ec-9b3b-4b25f07a0898":"Yes. \n\nBoth requirements seem to be about the functionality of the UIMiddleware component, specifically its interaction with mission plans and UAVs (Unmanned Aerial Vehicles). They appear to be related in terms of their focus on the UIMiddleware's capabilities and responsibilities within a larger system or application that involves UAV operations.","c986cc7a-9ab8-3868-887b-c2fc30be1863":"Yes. \n\nThese two requirements seem to be related because both are about the \"Hover In Place\" command, and one of them (the second requirement) specifically mentions a condition that should not happen while the first requirement is in effect (\"No waypoint directives during Hover In Place\"). This suggests they are part of the same feature or functionality.","ec54bdad-572d-3b60-855c-307c2dbbe420":"Yes. \n\nThey both seem to be related to routes, specifically how routes are described and displayed in a user interface (UI). The first requirement describes what information should be included in a route, while the second requirement specifies how that information should be presented to the user.","150a9abf-568f-3e61-b45b-e2d1c535b3ef":"Yes.","cf0c0208-8c11-30b8-8757-c944bb42b59c":"Yes.","d27b8332-f035-34d9-bc61-d173fe198672":"Yes.","3b90f6a3-8ebc-3bbd-921e-7081abef71e1":"Yes. \n\nThe two requirements are related because both involve loading data for the map view, one for its initial position (coordinates) and the other for its configuration parameters.","e3e6a73a-5c20-3592-8138-f5f44002201c":"Yes.","e83611e5-fcf7-3e50-8565-6dbc30df7f78":"Yes.","e72923a4-f0cc-3d89-a7bb-497caeba5b4e":"Yes. \n\nBoth requirements seem to be related to scheduling and assigning flight plans for Unmanned Aerial Vehicles (UAVs). The first requirement deals with automatically scheduling a route when requested, while the second requirement involves manually assigning a flight plan to a specific UAV and placing it in its execution queue.","2ded8f41-350b-3fa5-945d-5e3355e7ceb1":"Yes.","ba1071b5-3f98-3b19-8c8b-46edcdf92870":"Yes. \n\nBoth requirements are about the UI middleware and its functionality, specifically regarding routes for UAVs (Unmanned Aerial Vehicles). The first requirement is about assigning an existing route to an active UAV, while the second is about creating a new flight route with a unique ID when requested by a UI client.","974ca07f-9bf8-34e4-a6f1-6190bb2f03c1":"Yes. \n\nBoth requirements seem to be related to interactions between two systems, likely a GCS (Ground Control System) and an ActivityLogger. The first requirement is about logging events related to commands sent to and messages received from the GCS, while the second requirement is about informing the GCS of the result of an activation request. This suggests that they are part of the same system or process, possibly a workflow involving communication between these two systems.","cdba0cd5-ba6a-384c-aaad-7de3d94e4afb":"Yes.","ac4a8ac6-d2be-3fe4-ba18-91d780f0133c":"Yes.","f9e8a9ab-15e7-329c-9147-02defbeb407d":"Yes.","837a2af9-8097-36d3-a8f4-9573b6675d56":"Yes. \n\nBoth requirements are about \"Hover In Place\" command and its implications on flight plan execution, indicating a relationship between them.","f8365d21-5b70-3bfb-ab0b-4a95d77126df":"Yes.","cd9b4ffb-c2a5-3539-abf3-1a9723e11812":"Yes. \n\nBoth requirements seem to be about sending data (routes) from one system to another, which suggests that they are related to each other and possibly part of a larger process for managing routes in the context of drones (UAVs).","d4e7fec7-5592-3c51-9925-796fba666d88":"Yes.","8b2caefc-31aa-32dd-bb88-4f563e2d30ee":"Yes.","2851c7cc-5c24-34f4-897b-624df994c3d1":"Yes.","541c9a5d-8377-3baf-896f-a469ad724c92":"Yes.","f3d4c0e7-313c-3a98-bda3-27e9f5834db7":"Yes.","1e634e22-3388-38a1-8910-7bdbfdbe2a2b":"Yes.","eb16d9ca-6d3b-3b5c-8489-b72d86627e5c":"Yes.","22f9185c-4b43-386f-9ba4-614a28e778df":"Yes. \n\nBoth requirements are about handling a specific scenario where a UAV is in \"Hover In Place\" mode, and they seem to be complementary constraints on how flight routes and waypoints should be handled in this situation.","6f773ed9-65d4-3580-be24-757e9cf7a247":"Yes.","41e15a7d-f6e7-37a8-869f-9f62fbbea72b":"Yes.","b2b2e002-ff0a-3415-8fcf-af1dfd5b2901":"Yes. \n\nThese two requirements seem to be related because both of them are about the RouteCreationUI, which suggests that they are part of the same feature or functionality in the software being developed. The first requirement is about displaying a list of existing routes when the UI is loaded, and the second requirement is about creating and modifying routes within the UI.","091a3b9d-9468-30bc-93a7-fcfdf215e481":"Yes.","813d9e55-620c-34b1-b8f3-ae450267cd09":"Yes. \n\nThese two requirements are related because both of them deal with the functionality of deleting and modifying routes in the Route Creation UI, which suggests that they are part of a larger requirement set for managing routes within this user interface component.","9f936437-08a9-35d5-abc2-08c0582e8e57":"Yes. \n\nThese two requirements seem to be related because they both involve the activation of a new UAV (Unmanned Aerial Vehicle) and its interaction with the Ground Control Station (GCS) and GCS Middleware. The first requirement states that the GCS should report newly connected UAVs to the GCS Middleware, while the second requirement states that when an additional UAV is detected by the GCS, the GCS Middleware should call the UAVActivationManager to request UAV activation. This suggests a sequence of events where the GCS detects a new UAV and then notifies the GCS Middleware, which in turn requests the activation of the UAV from the UAVActivationManager.","4b1e05ce-e621-310a-b211-b4e645a574dd":"Yes. \n\nBoth requirements are about modifying and assigning routes, which suggests that they are related to each other. The first requirement is about creating/modifying flight routes, while the second one is about assigning those routes to a UAV. This implies that the creation/modification of flight routes (first requirement) should be followed by the assignment of those routes to a UAV (second requirement).","369e3b6f-3f08-3c5b-a957-69f2e9d869b3":"Yes. \n\nThese two requirements seem to be related as the first one describes a specific scenario where the VaadinUI issues a command for an UAV and requests control, while the second requirement explains how the UIMiddleware handles such control lock requests from UI clients (which includes the VaadinUI). The second requirement provides more details on how the control request is handled by the middleware.","8f0c03be-ec8e-3ccd-af99-687ccb9348af":"Yes. \n\nBoth requirements are about the CoordinateSystem class, and both involve transformations of some sort (calculating direction between two points and converting to p-vectors). They seem to be related in terms of functionality, possibly even part of a larger requirement for implementing a coordinate system that can handle different representations and calculations.","ddd8f62e-05c6-32d4-9c54-742278237098":"Yes. \n\nBoth requirements are related to scheduling and assignment of flight plans in an unmanned aerial vehicle (UAV) system, suggesting that they belong to a larger software development project focused on this domain.","1fca52cd-2da5-3c6d-a37d-6368f4e1920e":"Yes.","2775a2e3-28fb-340c-a77b-90f0c9a1d565":"Yes.","5d72ec83-a7be-3a58-9885-4095a0051213":"Yes.","7f2b3909-abc5-37ce-bd17-6983376c6b15":"Yes.","d75980a7-cc7c-377a-ad63-f8b6093a96d8":"Yes. \n\nBoth requirements seem to be related to a system that plans and executes missions for an Unmanned Aerial Vehicle (UAV). The first requirement deals with cancelling an active mission, while the second requirement describes what happens when the flight plan is aborted - the UAV switches to hover mode.","22fb1c54-4a90-390c-aac9-44245bc68a85":"Yes. \n\nBoth requirements are about multiple UAVs (Unmanned Aerial Vehicles) flying in a coordinated manner, suggesting that they are part of the same software development project or system. The first requirement focuses on preventing overlapping flight paths, while the second requirement outlines the steps for synchronized takeoff and subsequent flight patterns among multiple UAVs.","e43ec157-072c-383f-b26f-51168ef4c4a1":"Yes. \n\nThe two requirements seem to be related because they both deal with the handling of monitoring messages in the system. The first requirement describes how these messages are forwarded, while the second one specifies what information should be included in these messages.","6ba26ee4-fd11-36a4-8876-ae80deff5939":"Yes.","8be195d5-adeb-3620-ad92-3b5e069369c8":"Yes.","3cb4a65c-5883-3c32-b954-5d0b5dd3aab0":"Yes. \n\nBoth requirements seem to be related to the execution of a flight plan, specifically involving waypoints and logging events when reaching those waypoints. They appear to be part of a system that manages UAV (Unmanned Aerial Vehicle) flight plans and logs key events during their execution.","6b281168-590d-3244-a25e-229ff0e9f470":"Yes. \n\nThese two requirements are related because they both describe aspects of how the SingleUAVFlightPlanScheduler handles flight plans for a UAV (Unmanned Aerial Vehicle). The first requirement states that the scheduler should maintain a list of pending flight plans, while the second requirement specifies that these plans should be serviced in First-Come-First-Served (FCFS) order by default.","8a54438b-4fc0-32d8-bbb1-180fd2bd229e":"Yes. \n\nThese two requirements are related because both of them involve the functionality of the UIMiddleware, specifically its interaction with flight routes. The first requirement is about listing existing routes, while the second one is about creating a new route. Both are part of the same system and seem to be connected through their focus on managing flight routes.","34316b04-be45-3b2e-853d-5f2e54ddd8ae":"Yes. \n\nThe two requirements are related because they both refer to \"predefined FlightPatterns\" which is a common concept in both requirements. The first requirement states that the MissionPlanner shall manage predefined flight patterns, and the second requirement explains what happens when a predefined flight pattern is included in a mission plan.","1f9cb06f-9515-3ad1-9483-9cd84e91e92c":"Yes. \n\nBoth requirements seem to be about communication between a Ground Control System (GCS) and a GCS Middleware, which is part of a system that controls Unmanned Aerial Vehicles (UAVs). They are likely related in the sense that they describe interactions between these components.","8388ea28-aeba-38d7-a7f7-a0ce1c88a6e8":"Yes.","85944bee-8ffe-348d-958f-7c08490cf615":"Yes.","6ed558da-e419-38c7-a816-b4090223b135":"No. \n\nThe two requirements are not identical, although they seem to describe similar functionality. The first requirement mentions \"a mission is currently active\" while the second one talks about a \"currently executing mission plan\". They might be describing different states of a mission or have slightly different conditions for cancellation.","8aebbd9c-9426-354d-ab2d-ca85e5930fb4":"Yes. \n\nBoth requirements are about supporting multiple types of maps, but from different perspectives: one is about the type of layer (terrain, satellite), and the other is about the provider (open street map).","b6432526-7ed6-3abe-9292-65c5e99edc85":"Yes. \n\nBoth requirements seem to be related to the behavior of a UAV (Unmanned Aerial Vehicle) when it completes its current flight plan, specifically regarding what action should be taken next based on whether there are any pending flight plans in the queue.","f27312a8-b6f7-31e7-b1ef-eb41c52a3937":"Yes. \n\nThese two requirements seem to be related as they both involve the interaction of users with UAVs (Unmanned Aerial Vehicles) in terms of flight plans, which suggests that they are part of a larger system for managing and displaying UAV flight information. The first requirement focuses on displaying details about a selected UAV's flight plan when requested by the user, while the second requirement involves assigning routes to a UAV from an available list.","852e28ff-cec6-399c-8603-b51f7db0fe90":"Yes.","15a5d6f1-0299-39f3-bccb-780b9977ae40":"Yes.","3e8e4188-f512-3ad4-bf44-f4fd03593e1d":"Yes. \n\nThese two requirements seem to be related because the first one describes sending commands from Dronology to GCS, and the second requirement is about transforming those commands into a format that can be understood by the UAV. This suggests a sequence of events where the GCSMiddleware forwards commands from Dronology to the GCS, which then transforms them for the UAV.","c2a6277c-ae48-3c9c-b27b-13ba31c14d1d":"Yes. \n\nBoth requirements are about displaying maps, one for different types of layers and another for displaying it on UI with specific settings. They seem to be related as they both involve map display functionality.","5c2d6cd7-3d06-30aa-b802-92252d3a1d3e":"Yes. \n\nBoth requirements are about cancelling something in the context of flight plans, which suggests that they might be related to the same system or feature. The first requirement is about cancelling a pending flight plan, while the second is about cancelling a mission plan and removing all pending flight plans. This implies that there may be some connection between these two concepts, such as a mission being composed of multiple pending flight plans.","f4c6ff3d-7c31-37f9-be43-1ced854d3347":"Yes.","8eb4a068-9530-3edc-99b9-d1cfc9159ed3":"Yes. \n\nBoth requirements seem to be related to a User Interface (UI) for Unmanned Aerial Vehicles (UAVs), specifically the Real-Time Flight UI, and both deal with displaying information about UAVs and performing operations on them.","cbd29c0b-4b43-3e07-a098-997b1cbfc029":"Yes.","3276e59d-3900-344e-893e-1fea2c7544ab":"No.","c441ddae-96a2-356e-b3c7-64b30a36cc95":"Yes.","27c7a3db-a6fe-3604-a706-0b6831614ffb":"Yes.","8d168d80-a630-3fc0-8275-d896213c84c4":"Yes.","9e5de52a-0d5d-3454-98d0-31211fbc2de5":"Yes.","d3faaa4b-dc63-3005-b510-865b33c405ad":"Yes.","e2ef0f67-4500-38cf-aa92-6d817ab8cd45":"Yes.","4daffa5c-38b7-31e7-8d93-122563fddfb4":"Yes.","499f4749-177e-31d1-aa27-ee2cbea6939e":"Yes.","6274c905-9d93-3237-9c7c-763db7e270c0":"Yes.","4c8c6ba4-0ee2-33d3-a9ab-f76b76d46f36":"Yes.","4a7ee5bf-72aa-361f-8c66-c5e9be084f98":"Yes.","e280593e-6990-3b2d-85bb-f358868488ca":"Yes.","253cbb91-ad9f-325b-864f-19859deb4da1":"Yes.","da07329a-7f8c-3bc9-beca-5452d4442272":"Yes.","1e588605-87b0-30dc-b9ac-5977f86fc99e":"Yes.","cdfc8698-18d7-30eb-9c59-4c0ade2468a7":"Yes.","a2cc3a1a-3282-3db3-9e8f-17a2dd07d25d":"Yes.","5040b694-45cd-3f34-af22-0e4e30bdc62a":"Yes.","e8a8d782-279a-3598-9f80-985d18623d8f":"Yes.","cfba0db8-45d4-3256-84b2-fe837252b67c":"Yes.","e4521580-4b5e-3704-aa74-3557a887aa11":"Yes.","a1c698ea-54c8-3777-9e14-268cd3978168":"Yes. \n\nThese two requirements seem to be describing the same functionality from different perspectives, one focusing on retrieval and distribution (first requirement) and the other on publishing and subscribing (second requirement). They appear to be complementary views of a single feature in the software.","0084d6da-1eb5-34a7-9fd6-a2c7ad054348":"Yes.","faf89357-db9f-36c8-9edb-d0d404dfd5e5":"Yes.","c884a75c-f73d-3d31-b0e3-607407dea759":"Yes.","a87616d3-8d47-3f87-8e2f-555c05ae9d35":"Yes.","e0add490-6aaf-3946-a1a5-90b58cf2d4d1":"Yes. \n\nThese two requirements seem to be describing the same functionality from different perspectives, which is a common relationship between software development artifacts. The first requirement focuses on receiving messages, while the second one emphasizes publishing and subscribing to messages. They appear to be complementary views of the same feature.","b0a6274f-03ba-3b78-815c-7c300fc7c22e":"Yes. \n\nBoth requirements seem to be related to the Obstacle Avoidance system in a UAV (Unmanned Aerial Vehicle) context, specifically discussing its behavior and interaction with other systems when it is active.","41fbbb3b-88ff-32d2-8339-9502d7474df0":"Yes. \n\nThese two requirements seem to be related because they both involve flight plans for Unmanned Aerial Vehicles (UAVs). The first requirement specifies that a single flight plan should only be executed at a time for each UAV, while the second requirement involves synchronizing and coordinating flights of multiple UAVs in a mission planner. This suggests that these requirements are part of a larger system or process for managing UAV flight plans.","b966822d-c2d9-30c5-851d-07348ad78436":"Yes. \n\nBoth requirements seem to be related to the Object Avoidance system in a UAV (Unmanned Aerial Vehicle) context, suggesting that they are part of the same software development project or module. The first requirement focuses on issuing evasive directives when an object is within proximity, while the second requirement deals with computing distances between UAVs for avoidance purposes.","555a3e9b-0ed8-38cb-936c-e397d6ac59fe":"Yes.","ed06531e-6c14-3d13-a0ee-de0ae57a7ace":"Yes. \n\nBoth requirements seem to be related to monitoring functionality in the DronologyRuntimeMonitor, specifically retrieving and distributing messages to clients. The first requirement focuses on retrieving monitoring messages, while the second one is about defining groups of topics to monitor. These two are likely connected as they both pertain to the same monitoring aspect of the system.","f147d636-d81c-3e4d-be6b-9339cd717a0d":"Yes.","cb1cf324-63d9-398d-b0f0-043f63aebd1b":"Yes. \n\nBoth requirements are related because they both involve the RouteCreationUI and its interaction with Dronology, specifically regarding routes. The first requirement is about persisting a new or modified route, while the second is about modifying existing routes. Both seem to be part of the same feature or functionality within the software being developed.","3a9d93e1-1a2e-3607-be0e-aee93f910a00":"Yes. \n\nBoth requirements seem to be related to assigning tasks (flight routes or plans) to Unmanned Aerial Vehicles (UAVs), specifically involving the FlightManager component. The first requirement deals with a specific scenario where a UAV is hovering in place, while the second one covers general manual flight plan assignment.","6b943919-22a3-3392-bcf7-495104338d2c":"Yes. \n\nBoth requirements seem to be related to the activation of Unmanned Aerial Vehicles (UAVs) by a Ground Control Station (GCS), and how the GCS Middleware handles these requests, including duplicate requests.","7c9280ed-95f3-348d-94dd-6116aead303b":"Yes.","570fe035-9459-34a8-a9e7-7358554ed23a":"Yes. \n\nBoth requirements seem to be related to communication between Ground Control Station (GCS) and Unmanned Aerial Vehicle (UAV), specifically involving GCS Middleware, which suggests a common system or framework being referenced in both cases. The first requirement is about forwarding commands from the GCS to the UAV via the middleware, while the second is about notifying the middleware when the UAV is activated, including sending its home location and ID. These two requirements appear to be complementary parts of a larger process for managing UAVs through the GCS and middleware system.","00aa6a26-d2de-32f1-9eb8-2cf5d3ff8bfa":"Yes.","91e265a0-1513-3dee-b40a-1f438fe2505d":"Yes.","5fd6c4cb-c57a-3ce1-8996-13997012185d":"Yes.","a658b0f9-4b8b-320e-813c-a758da353f44":"Yes. \n\nBoth requirements are about deactivating a UAV and removing its associated flight plans, which suggests that they are related to the same functionality.","4719ff2a-a42c-3367-8de8-8ad3a302fe39":"Yes.","2feaad59-8d22-3691-85e3-8b5728fa9591":"Yes. \n\nThese two requirements seem to be related because they both involve a flight plan, waypoints, and the VehicleCore sending information to the UAV. The first requirement mentions sending the next waypoint to the UAV when a flight plan is executed, while the second requirement involves computing the distance to the next waypoint based on the UAV's current coordinates and target waypoint.","296eec16-80f6-37fc-a86a-b81465b0db10":"Yes. \n\nThese two requirements seem to be related because they both involve the FlightRouteManager and are about retrieving or persisting flight routes, which suggests that they might be part of a larger system for managing flight routes.","832e8e3c-1d73-3ea3-aaea-d558f30bff5f":"Yes.","a7fceffb-e7e6-3396-8206-4afa4cb3dfca":"Yes. \n\nBoth requirements seem to be about communication between GCS (Ground Control Station) and GCSMiddleware, specifically involving transmission of information about UAVs (Unmanned Aerial Vehicles). The first requirement is about transmitting the current location of a UAV, while the second is about announcing recognized UAVs.","2761eda5-1528-3caf-93aa-eaba68c7e0eb":"Yes.","fb6a0fa2-ca84-3637-93ca-c54c910e4b33":"Yes. \n\nBoth requirements seem to be about communication between GCS (Ground Control Station) and GCSMiddleware, specifically involving UAV coordinates and activation events. They appear to be two separate but related tasks in the software development process.","86f97e3a-ebde-3216-8990-effc7be26434":"Yes.","261454cb-964b-3b97-a7c0-f87b34eb4016":"Yes.","9003980e-c77c-3f9e-bc6e-1af4b4595d24":"Yes. \n\nThese two requirements are related because both involve displaying a map in the UI, which is mentioned in the first requirement. The second requirement also mentions updating UAV locations \"on the map\", implying that the map displayed in the first requirement will be used to show these updates.","305ccde8-ea75-3ca1-99f7-2ad002c062a0":"Yes. \n\nBoth requirements are about activating a UAV, one from GCS to Dronology and the other from GCS Middleware to Dronology, but both have conditions that need to be met before activation can occur.","214b1ade-16cd-3b80-89fe-542f8d5ca1a2":"Yes. \n\nBoth requirements are under the same category \"Mission Planning\" and seem to describe different aspects of how flight plans should be executed in a system called _MissionPlanner_. The first requirement mentions concurrent execution for multiple UAVs, while the second one describes the process of expanding predefined FlightPatterns into waypoints and synchronization points for each participating UAV.","d9b0c2f1-ed18-3be9-b304-db6e29a818a5":"Yes.","fbb66ce1-7409-37a8-b5e0-b346ca604fb4":"Yes.","cafbcc71-923a-37f7-87c2-085e78f824f1":"Yes. \n\nThe first requirement describes storing information about UAVs, and the second requirement mentions receiving notifications when a UAV's configuration changes. This suggests that the two requirements are related to managing UAV data and events in some way.","724e45b2-69fb-3d61-9bf0-9f770d2a9182":"Yes. \n\nBoth requirements are about flight patterns and mission planning, suggesting that they are related to the same system or feature. The first requirement mentions multiple UAVs in pattern-based flight and overlapping paths, while the second requirement talks about expanding a predefined FlightPattern into waypoints and synchronization points for each participating UAV as part of Mission Planning.","31ecc52f-bb38-32ae-87c0-6d938f47a24d":"Yes. \n\nBoth requirements are about distinguishing different types of waypoints or route segments, which suggests a connection to the same feature or functionality in the software being developed.","1c3a85d5-db05-3ebc-a59c-c59a09cdf63a":"Yes.","1044fc3e-3e33-3231-b072-80214bdf6aa6":"Yes.","fcfb4627-6820-306d-accc-8b665ad2489a":"Yes.","4be483e1-89bc-394f-b3e6-e26e8280590c":"Yes.","7831ded0-2178-364c-b82b-ac50d7ff8632":"Yes. \n\nThese two requirements seem to be related because they both involve assigning and unassigning flight plans to/from UAVs, which suggests that they are part of a larger process for managing flight plans in the system. The first requirement involves removing a planned flight if requested, while the second involves manually assigning a flight plan to a specific UAV.","f1c85ef8-b979-3d87-96ef-b1c69c93ba85":"Yes. \n\nBoth requirements seem to be related to the loading and functionality of the RealTimeFlightUI, suggesting that they are part of the same software development project or module.","a04ac72e-6467-3a35-9da8-1d4143e2c71d":"Yes.","615a8e2d-8c78-3ae6-8440-24f99be82c23":"Yes. \n\nThese two requirements seem to be related because they both appear to be about displaying information in a user interface (UI) for routes, one showing a list of existing routes and the other showing details of an active route. They likely belong to the same feature or component of the software.","512ddd81-47e8-36ad-bec6-cfaa8545d2c4":"Yes.","97048cd9-7ee4-301e-8b38-d4a6ab016f09":"Yes.","ce318291-9399-36d3-b297-ddd9f45ccb7b":"Yes.","8483ba3f-51a5-32f2-b931-7213fe5c5a56":"Yes.","80a13a1e-e583-3cd0-82c9-f305535d6173":"Yes.","4fc8da83-4ef1-31a4-936e-23df6e0935c0":"Yes.","300edf8f-9714-302e-893f-5924e9f8cc3e":"Yes.","1e13d949-49ce-3c5b-b5a8-04d15ef61edb":"Yes.","ac178e15-afcd-31ba-b207-81f591ce2054":"Yes","2d0f3199-15ea-387c-9664-d431dddd7db2":"Yes.","974f817f-c096-3bc3-b8f5-dfafa5b7aaa9":"Yes.","d03b1ba6-756c-3497-bb1d-7b486e22b57a":"Yes.","40598142-5528-3fd1-a1ca-541dc1a7a798":"Yes.","2b6fd901-9da3-3ff1-aec2-42d52fad361b":"Yes. \n\nBoth requirements seem to be related to navigation in a geographic context, involving computation of directions and distances between coordinates. They likely pertain to a system that manages the movement of an Unmanned Aerial Vehicle (UAV).","0e49c88c-a94e-3baa-9b4d-8b0104fb4a6d":"Yes.","444ba7ee-c6b4-380e-978b-50d1d5739725":"Yes. \n\nBoth requirements are about handling a lost connection between GCS (Ground Control Station) and UAV (Unmanned Aerial Vehicle). The first requirement focuses on reconnection, while the second one is about notification when reconnection fails. They seem to be related in terms of dealing with a lost connection scenario.","15591117-31fb-3177-844a-ffc024d6267b":"Yes.","6e704e77-6569-3eaa-83b8-5bd745a1c34b":"Yes. \n\nBoth requirements mention configuration parameters stored in files, which suggests that there might be some commonality between them.","4ed2ad0c-807d-36ed-97fc-4424d716dccd":"Yes.","568f982c-36e5-35ad-9800-5814d4b11694":"Yes.","a3999fac-f1eb-38ba-931b-f7bafc8a8b30":"Yes.","bb72ccd3-09d9-349b-b548-aab8f4471f26":"Yes. \n\nThese two requirements seem to be related as they both involve managing flight plans for Unmanned Aerial Vehicles (UAVs). The first requirement mentions maintaining a managed list of pending flight plans, while the second requirement talks about assigning a flight plan to a specific UAV and placing it in its execution queue. This suggests that the SingleUAVFlightPlanScheduler is responsible for managing flight plans from creation to assignment to a UAV's execution queue.","680b08ff-76e1-3ce7-92f5-07a772a3f7cd":"Yes.","9974c5d3-8655-3c7c-bbf4-423315783d7d":"Yes. \n\nBoth requirements are about handling lost connections between GCS (Ground Control System) and other systems, specifically Dronology and UAVs (Unmanned Aerial Vehicles). The first requirement deals with a connection loss to the GCS from the GCSMiddleware, while the second requirement addresses a connection timeout to a UAV.","68fbe103-4e87-3296-b851-1638186edd21":"Yes.","4a9d9452-1cf2-3688-94b4-bcc7921e5313":"Yes.","7de9bf45-3452-3755-adbf-aceb026a74ef":"Yes.","4f077555-df8e-3d34-9627-e1fb20023a1e":"Yes.","12dfabdc-e9c2-3952-b333-c44b8b8c71bf":"Yes. \n\nBoth requirements are about avoiding objects, one from a high-level perspective (ensuring reaching destination while avoiding obstacles) and another from a more technical standpoint (retrieving the state of the onboard obstacle avoidance system).","31821ae9-c030-39cf-8e3e-06c88bb1c67a":"Yes.","8f860a57-9e5a-3a60-bfca-a2eea1e49a2a":"Yes.","63332e13-1280-30d2-9d60-74af643c2266":"Yes. \n\nBoth requirements seem to be about the CoordinateSystem class, and both are related to transformations of some sort (direction calculation and coordinate system conversion). They likely share commonalities in terms of input/output parameters, preconditions, postconditions, and possibly even implementation details.","02db4ea9-c63c-39d6-9ea9-fa76ff21220e":"Yes.","e450ab93-b257-3792-b70e-5e45add2994f":"Yes.","74e5aaed-bbca-3825-b40b-8bbcf7c52968":"Yes.","7e2f864b-d37b-3c6a-92f0-a81f07024684":"Yes.","b912a374-3315-3448-8034-35244e7ee842":"Yes.","ed05cead-94e3-39ed-b092-e292e662245d":"Yes.","53be6499-7dd1-34ef-8af1-557bb8d177d2":"Yes.","38d1ea0a-a50a-3327-b7c7-307935042e54":"Yes.","8b19e15b-2f5a-312d-ab8c-9f05beb6c410":"Yes.","17cb8815-9f8d-320c-9b44-e8246325b954":"Yes. \n\nThese two requirements seem to be describing different aspects of the same functionality, specifically how the DronologyRuntimeMonitor handles monitoring messages. The first requirement focuses on forwarding new monitoring messages to subscribed clients, while the second requirement describes a more general API for publishing and subscribing to monitoring messages. Together, they suggest that the system should allow users to publish and subscribe to monitoring messages, which will then be forwarded to relevant clients.","c239d1de-82c5-3dd6-a9cd-ba73aba34660":"Yes.","cee397cd-717a-3bbc-b0c3-6a11477c5d8a":"Yes.","fae614fb-49f8-3ca2-8e53-285e90acf044":"Yes. \n\nBoth requirements seem to be about interactions between the Client and the UIMiddleware, specifically regarding mission plans and flight plans. They appear to be related in terms of functionality and scope.","ec8a5d20-fcbd-3d75-ae45-cedcad61134c":"Yes.","25ce5eb3-bb51-3018-af2c-6b5184d028fa":"Yes.","36c56b12-5f3b-3fe3-842f-320a77b4b9e6":"Yes.","e7ab155c-5168-3451-9c81-73812035a94a":"Yes. \n\nBoth requirements seem to be about safety features of a UAV system, specifically avoiding obstacles and not sending unnecessary commands when the UAV is in a specific mode (hover in place). They both appear to be constraints on how the system should behave under certain conditions.","1c946c8e-1c57-3a1a-99f8-5e9f9feec025":"Yes. \n\nBoth requirements are about the RouteCreationUI, which suggests that they are related to the same feature or functionality of the software being developed. The first requirement focuses on distinguishing between different types of waypoints, while the second requirement is more general and covers various aspects of route information display and modification in the UI.","fffad1ba-b2f8-3bd6-9294-8aada11356fd":"Yes.","5deb4d91-c003-36b5-b0ac-9fb67063eaf9":"Yes.","02827143-6894-36e7-91ba-7a9da59b7f3a":"Yes.","191eda9b-d8f1-3b04-a9e9-6bba53b01aa5":"Yes. \n\nBoth requirements seem to be about scheduling and assigning routes for Unmanned Aerial Vehicles (UAVs), which suggests that they are related to the same functionality, possibly different aspects of it.","f638aab8-671a-3085-8f5b-064fd075255a":"Yes.","eb441e37-9d66-3627-9b32-151b2b9337f9":"Yes.","7ddaab64-7220-3812-bd89-7d5452990f18":"Yes.","2e2e742a-8c4a-3cc2-9091-531a4dcacc1e":"Yes.","d08c1bdf-8c87-3072-9607-1f675074522d":"Yes.","3ea79e0b-4ae9-3d86-9f3d-f8e89ae2c62d":"Yes.","3d811f68-1810-3809-b67d-cfdd1335fd45":"Yes.","bb4636ed-9be3-3009-9942-1e0c8785fd55":"Yes. \n\nBoth requirements seem to be related to the functionality of the DronologyRuntimeMonitor, specifically its interaction with clients and monitoring messages. They both describe how the monitor should handle incoming messages and interact with clients, suggesting a connection between them.","a10628ab-3df3-3558-9337-bb78f273388b":"Yes.","63159dd4-138f-3a8b-b71d-cd9b1112b5f7":"Yes.","c2ec11ec-6812-3181-bb83-6b9ccfb7ed1e":"Yes.","ddc8380b-0d82-3ce0-9098-d157f436846b":"Yes.","2731d965-6678-367e-acd2-e8c19e7259fd":"Yes.","86154288-10e3-3200-abd2-35de02e2fc43":"Yes. \n\nBoth requirements seem to deal with cancelling or removing active plans for Unmanned Aerial Vehicles (UAVs), which suggests that they are related in terms of functionality and scope.","d217f4ba-6f71-3374-a6bb-da75e3696bd2":"Yes. \n\nBoth requirements are about multiple UAVs and their flight plans, suggesting a connection in terms of system functionality for managing groups of drones.","c8ee4056-8aae-3776-bdc1-30fd05b8c843":"Yes.","c433fcf2-c3cd-3161-a309-581afc7c22c7":"Yes.","c3f9bea3-8b43-31fc-a7cf-da8c64dc2405":"Yes. \n\nThey both seem to be requirements for an Internal Simulator in a software development project, specifically dealing with simulating flight operations (landing and taking off) of a UAV (Unmanned Aerial Vehicle).","e4279de1-1e5e-35a4-a210-acd6de221472":"Yes.","b6876206-dc35-3226-9650-c16ce27ddea8":"Yes.","ba9df6eb-2d48-3297-bfe5-e4175203d395":"Yes. \n\nBoth requirements describe interactions between a UI middleware and clients, specifically registration of clients for certain events (registrations and UAV activation/deactivation).","d76f1e63-4991-3d1a-94a4-3aa17df577bf":"Yes.","a571a8b5-7809-387c-8fb2-f68a49063821":"Yes.","58959d44-2858-3a3e-9fd5-e613c500d4c0":"Yes.","90c9d7ed-7ff8-350f-8aba-67bf7b3ee6f9":"Yes.","e2a5a4e4-8d98-3ca9-8e3a-7cb554957986":"Yes.","c338fd1b-632f-3cf0-a64d-b3f993b63fe9":"Yes.","302e463d-1c10-35cc-9bae-ab2188bb427e":"Yes.","d32ca940-5fa1-3fb0-960e-e87fa8ee408b":"Yes."}