{"83ea9c65-950d-3559-8975-8556de978cb5":"Yes, these two requirements are related because they both involve the use of a middleware component called GCSMiddleware. The first requirement states that the GCSMiddleware shall handle multiple GCS devices, while the second requirement states that the GCS device shall send UAV coordinates to the GCSMiddleware when they are received from the UAV. Therefore, these two requirements are related because they both involve the use of the GCSMiddleware component in some way.","a1721766-867c-3a1b-a408-902513e57012":"Yes, these two requirements are related because they both involve the scheduling of flight plans for a UAV. The first requirement states that when a UAV completes its current flight plan, it should assign a new flight plan to execute. The second requirement states that if there is a pending flight plan in the queue, then the next flight plan should be removed from the queue and set as the currently executed flight plan. Therefore, these two requirements are related because they both involve the scheduling of flight plans for a UAV.","947f36f9-e12e-3445-bec7-766b74cbbec5":"No","55a4efbb-b9e5-3340-a254-ea625ebb3d65":"Yes, these two requirements are related because they both involve the use of the GCS (Ground Control Station) and the GCSMiddleware. The first requirement states that the VehicleCore shall support UAVs connected via the GCS, which implies that the GCS is a critical component in this system. The second requirement states that the GCS shall send the UAV's current properties to the GCSMiddleware when they are received from the UAV, which suggests that the GCS is responsible for collecting and transmitting data related to the UAV's properties. Therefore, these two requirements are related because they both involve the use of the GCS in some way.","e7c0e850-b480-3291-a43d-7521879ee833":"Yes, these two requirements are related because they both involve the use of a software tool called Mission Planner. The first requirement states that the Mission Planner shall execute flight plans for multiple UAVs concurrently, while the second requirement specifies that the Mission Planner shall provide an interface to support the execution of predefined missions specified in JSON. Therefore, these two requirements are related because they both involve the use of the Mission Planner tool and its ability to execute and import mission plans.","953b806f-b523-3da3-9b60-eed3dfe879fe":"Yes.","87a167d7-8824-3071-ac7c-1e85c7d27a9d":"Yes","4aa3477c-73eb-3012-9283-51ce38d7a995":"Yes, these two requirements are related because they both involve the UI middleware and its ability to support modifying flight routes. The first requirement states that the UI middleware shall enable the creation and modification of flight routes, while the second requirement specifically mentions that the UI middleware shall create a new flight route with a unique ID when requested by a UI client. Therefore, these two requirements are related because they both involve the UI middleware's ability to support modifying flight routes in some way.","88df03c2-40a6-36ce-a009-55aacfdd360f":"No","1d3d9b3c-2d21-382a-b2e1-4dfabd04bbde":"No, these two requirements are not directly related. The first requirement is about assigning a type to each UAV and defining its basic attributes, while the second requirement is about establishing a maximum number of activated UAVs. These are two separate concerns that may be addressed in different parts of the software development process.","498f1842-bd32-3f3b-badb-28f6548088be":"Yes, these two requirements are related because they both involve the GCS (Ground Control Station) transmitting data to the Middleware. The first requirement states that the GCS shall transmit the UAV's properties to the Middleware, while the second requirement states that the GCS shall send the UAV's current coordinates to the Middleware when they are received from the UAV. Therefore, these two requirements are related because they both involve the GCS transmitting data to the Middleware.","946cbcbc-34b3-3519-92ca-dea7d67a9a7c":"Yes, these two requirements are related because they both involve working with coordinate systems and converting between different representations of coordinates. The first requirement asks for a method that can calculate distances between two points in a given coordinate system, while the second requirement asks for a method that can transform coordinates from one representation to another. These two requirements are related because they both deal with coordinate systems and their transformations, making them part of the same domain.","5451d065-ffe0-339c-a60b-b9232e09f5d9":"No, these two requirements are not related. The first requirement is about forwarding commands from the GCS to the UAV, while the second requirement is about transforming commands into a vehicle-specific format. These are two separate tasks that may be performed by different components of the system.","ab6acfcf-30dd-3d94-a318-0724de37e6dd":"Yes.","95d1a32d-69fe-3e9a-842c-826382180110":"Yes, these two requirements are related because they both involve ensuring that a flight route is valid. The first requirement states that the _FlightRouteManager_ shall ensure that all flight routes represent a {{VALID_FLIGHT_ROUTE}}, while the second requirement states that upon receipt of a new or modified flight route from the UI middleware, the _FlightRouteManager_ shall check that it is a {{VALID_FLIGHT_ROUTE}} i.e., that all waypoints are valid coordinates and that the flight route contains at least one waypoint.","6be5d525-0374-3ed9-99b3-587c0b8745eb":"Yes.","c265431a-e018-3979-95a9-1bb321b1edb4":"No, the two requirements are not related. The first requirement is about receiving monitoring messages from any Dronology component, while the second requirement is about formatting UAV monitoring messages as JSON objects and containing arbitrary information regarding a single UAV.","9a6ab387-8723-3504-8844-0eb408e4250c":"No","b029ea08-6597-309a-97b1-290dc6da3ad4":"Yes, the two requirements are related because they both involve the concept of identifying and assigning unique IDs to UAVs. The first requirement is about assigning a unique ID to each activated UAV, while the second requirement is about including a unique {{UAV_ID}} in each command sent to the UAV.","bfc44dd6-f1e7-3a5f-a0e6-fbbaddab0588":"No","829d6152-ac68-3580-9662-c7b64ed32a23":"No","2a3f5f0d-154b-322f-905a-bd719f645012":"Yes, these two requirements are related because they both involve the creation and management of routes in some way. The first requirement mentions the _RouteCreationUI_ component, which suggests that it is responsible for creating and managing routes in the UI. The second requirement mentions the _UIMiddleware_ component, which also involves route creation and management. Therefore, these two requirements are related because they both deal with aspects of route creation and management in some way.","81e4270c-2197-3035-b717-85f156c0618d":"Yes, the two requirements are related. The first requirement defines a pattern-based flight path, which includes waypoints as offsets from the starting position of the UAV. The second requirement defines the {{GOTO_WAYPOINT}} command, which includes a target latitude  longitude  and altitude coordinate. These coordinates can be used to specify the waypoint in the pattern-based flight path. Therefore, the two requirements are related because they both involve specifying coordinates for waypoints in a flight route.","c6472c8c-5e82-3db9-a16c-051eaab24868":"Yes, these two requirements are related. The first requirement states that the RealTimeFlightUI shall notify users when an emergency occurs, while the second requirement states that a client shall register with the UIMiddleware to receive notifications whenever a new flight plan is activated or executed. Both of these requirements involve the use of the UIMiddleware, which suggests a relationship between them.","19f8f33a-c8ed-3dd7-a50c-64ebdcf97200":"Yes.","06f984e5-7526-3c47-a25a-3169b85be02c":"Yes, these two requirements are related because they both involve the use of the UIMiddleware to retrieve information about UAVs and display it on a map. The first requirement requires that the RealTimeFlightUI allow users to follow one or multiple UAVs, which would require the ability to periodically update their locations on the map. The second requirement specifies that the UI shall periodically request current locations of all registered UAVs from the UIMiddleware and update their locations on the map. Therefore, these two requirements are related because they both involve the use of the UIMiddleware to retrieve information about UAVs and display it on a map.","f3408128-7a16-36a6-af86-15ad9b363782":"No, these two requirements are not directly related. The first requirement is about assigning a flight route during hover in place mode for a UAV, while the second requirement is about assigning a list of waypoints from a route to an active UAV using the UI middleware.","84a63b54-23f3-334d-b843-a02e8265ba00":"Yes, these two requirements are related because they both involve the management of UAVs and their registration. The first requirement is about storing UAV meta-data information, which is a prerequisite for activating registered UAVs.","6216cdba-b384-3119-bbb4-672f46b924d7":"Yes, the two requirements are related because they both deal with displaying information about flight plans on a map. The first requirement asks for the display of active routes, while the second requirement asks for the display of assigned routes and includes additional details such as time in flight, traveled distance, remaining distance, completed waypoints, and total waypoints. Therefore, these requirements are related because they both involve displaying information about flight plans on a map.","9eb10dcb-d007-3fad-96a5-e8ba1550b363":"Yes.","ac41e07e-b0d7-307e-b871-c7adee44e306":"Yes, these two requirements are related because they both involve the UI (User Interface) of the software system. The first requirement is about canceling a pending flight plan, which involves notifying Dronology when a user cancels a flight plan through the UI. The second requirement is about requesting and displaying pending flight plans assigned to a UAV, which also involves the UI. Therefore, these two requirements are related because they both involve the UI of the software system.","102a967a-f18c-319a-b9e3-fd9535912cc2":"Yes.","021ed722-c054-3ff0-8aab-8b346b7d4eaa":"Yes, these two requirements are related because they both involve the use of predefined flight patterns and mission plans. The first requirement states that the MissionPlanner shall manage predefined FlightPatterns, while the second requirement provides an interface to support the execution of predefined missions specified in JSON. Both requirements deal with the management and execution of predefined plans, which suggests a strong relationship between them.","2fc682b4-28ea-3a60-b978-06688ba39a9d":"Yes, these two requirements are related because they both deal with the ObjectAvoidance system and its capabilities. The first requirement is about the activation of collision avoidance, which requires the system to issue commands within the capabilities of the UAV. The second requirement is about checking UAV properties and directives against them, which is also a part of the ObjectAvoidance system's functionality.","ab33ec37-3e99-39f8-8de1-1e4ce8722f85":"Yes, these two requirements are related because they both involve the use of flight patterns in a UAV system. The first requirement describes a pattern-based flight path that uses waypoints to navigate the UAV, while the second requirement describes a synchronized landing pattern that involves multiple UAVs following a specific sequence of actions to ensure safe and coordinated landings.","cfb8f154-c13a-39e9-85fe-eecd4acc37d8":"Yes, these two requirements are related because they both involve the use of the GCSMiddleware component in the software development artifacts. The first requirement states that the GCSMiddleware shall handle state messages, monitoring messages, and mode change messages received from an GCS, while the second requirement states that the GCS shall send the UAV's current properties to the GCSMiddleware when they are received from the UAV. Therefore, these two requirements are related because they both involve the use of the GCSMiddleware component in the software development artifacts and require it to perform specific tasks.","dd1c218c-e998-3fc5-b8cc-ecfd69e7a542":"Yes.","8de841c9-d19a-338b-8011-34968e55d541":"Yes, these two requirements are related because they both involve the cancellation of a flight plan. The first requirement states that when a user cancels a pending flight plan, the RouteAssignmentUI shall notify Dronology, while the second requirement states that when the user presses the cancel pending flight plan button, a request is sent to the UI_Middleware to cancel the flight. Therefore, these two requirements are related because they both involve the same action of cancelling a flight plan.","b0ddf8e2-6cce-3e88-ab9b-6c92c9d62ba4":"Yes, these two requirements are related because they both involve the use of mission plans as a means of specifying and executing tasks. The first requirement is focused on accepting and activating mission plans through the UI, while the second requirement is focused on providing an interface for importing and executing predefined missions in JSON format.","aa551ec8-c67f-3bc1-a87d-b8e6b37b3e07":"Yes, these two requirements are related because they both deal with the persistence and storage of flight routes. The first requirement states that the _FlightRouteManager_ shall persist flight routes, which means it will be responsible for storing them in a way that allows them to be retrieved later. The second requirement specifies that flight routes should be specified in a standard format, which is likely to be used by the _FlightRouteManager_ when persisting and retrieving flight routes. Therefore, these two requirements are related because they both involve the management of flight routes and their storage.","e954dd49-9f65-3232-89e6-b60b43ec1057":"Yes.","6d24c6af-e173-3751-87e1-ad057f80a2de":"Yes, they are related. The first requirement is about defining a pattern-based flight path, which is used in the second requirement to expand a predefined FlightPattern into a set of waypoints and synchronization points for each participating UAV.","1fee0fea-9a8f-3dbc-a1a2-6de75c992f41":"Yes.","bba7dc56-e12e-3382-8a7c-e6410f90e75a":"Yes","19728163-c3a4-3f91-b8b2-a77344844380":"Yes, these two requirements are related because they both deal with the validation of route altitude and speed values. The first requirement states that the _RouteCreationUI_ shall only accept valid altitude and speed values for waypoints, while the second requirement specifies that the altitude and speed values shall not exceed the current maximum UAV_MAX_ALTITUDE and UAV_MAX_GROUND_SPEED set in the system.","93787f54-7852-3af6-86e4-138e13bce711":"Yes","f2fea6bf-ea70-3c72-93df-07eade62ee1b":"Yes, the two requirements are related because they both involve emergency operations that need to be performed on a group of UAVs. The first requirement mentions hovering multiple UAVs and sending them back home in case of an emergency, while the second requirement mentions RTL (Return To Launch), takeoff, hover-in-place, and resend command as possible operations that can be performed on a single UAV or a group of UAVs.","1bb979e6-c3f2-3a1e-962b-0c6897819861":"Yes, the two requirements are related. They both deal with the maximum number of activated UAVs and how to handle activation requests when that limit is reached. The first requirement specifies that the system shall reject any further activation requests when the maximum number of allowed activated UAVs has been reached, while the second requirement defines the maximum number of activated UAVS as {{MAX_UAV}}.","9c89f3da-0874-360f-82e9-e4369a91547e":"Yes, these two requirements are related because they both deal with displaying information on a map. The first requirement asks for the display of active routes, while the second requirement asks for the display of waypoints and their connections. Both of these aspects are important for providing users with a clear understanding of the flight plans that are currently active.","f0d39029-e184-34e0-9fde-7270fa98bf86":"Yes, these two requirements are related because they both deal with the takeoff process of a UAV. The first requirement specifies that when a flight plan is activated for a UAV currently on the ground, the FlightSchedulingandExecution system shall notify the UAV to take off vertically until it reaches the prescribed altitude. This means that the UAV will be instructed to take off and reach a specific altitude. The second requirement specifies that the {{TAKEOFF}} command shall specify the target altitude, which is the same as the prescribed altitude mentioned in the first requirement. Therefore, these two requirements are related because they both deal with the takeoff process of a UAV and the target altitude it should reach during this process.","760b33e1-0fb0-33ce-ae30-56c82f22baef":"Yes.","36dd3aa4-fbcc-38ea-9f7c-6dc3ff9ecfa5":"No","19f5ba44-ddad-323f-b35b-ebae9f4c92b2":"Yes, these two requirements are related because they both involve logging events related to flight plans. The first requirement states that the ActivityLogger shall log all flight plan related events, while the second requirement requires that a log event be created when a flight plan is initiated and includes information about the route, UAV, and initiation time stamp.","aca32892-7eaa-3c29-817e-9fa06c4e8944":"No, these two requirements are not related. The first requirement is about supporting different types of map layers, while the second requirement is about displaying multiple routes on a map.","74701b66-332e-339a-81e6-83486031bfd8":"Yes, these two requirements are related because they both involve the GCS (Ground Control Station) transmitting information to the Middleware. The first requirement states that the GCS shall transmit the UAV's current location to the Middleware, while the second requirement states that the GCS shall send the UAV's current coordinates to the Middleware when they are received from the UAV.","2c04f504-f385-3f27-9571-6ca718343974":"Yes.","f6c70856-a7a3-3290-bbea-2dcdea159a62":"Yes","bcb5bc22-71db-34e4-bfb4-3b0e1b36ab70":"Yes, these two requirements are related because they both involve the transmission of route assignments from the UI Middleware to Dronology. The first requirement states that when a route is assigned or removed from a UAV, the RouteAssignmentUI shall notify Dronology, while the second requirement states that when routes are assigned to a UAV, a request shall be sent to the UIMiddleware to update the assignment in Dronology. Therefore, these two requirements are related because they both involve the transmission of route assignments from the UI Middleware to Dronology.","ea49e4a3-432a-364f-8b73-09c84f5850e1":"No, these two requirements are not related. The first requirement is about loading a default set of coordinates when the map view is loaded, while the second requirement is about loading a saved map scale when the map is loaded. These are two separate concerns and do not depend on each other.","d6de5816-c719-3eaf-a01e-426f884c2847":"Yes, these two requirements are related because they both deal with the creation and modification of routes in the UI. The first requirement describes the structure of a route, including its unique ID, textual description, and set of waypoints, while the second requirement specifies that the _RouteCreationUI_ shall support route creation and modification in tabular mode by displaying an editable table showing each waypoint and the velocity of the UAV approaching the waypoint.","915a4cb1-8bd9-31e7-a333-a3b8e267b6b4":"No","07513dcd-8f9b-3b3c-900b-a9edd3706b51":"Yes, these two requirements are related because they both involve the UI middleware and its role in handling user interface (UI) clients. The first requirement specifies that the UI middleware should provide an interface for registering UI clients, while the second requirement states that a client may register with the UI middleware to receive notifications whenever unexpected events occur. Therefore, these two requirements are related because they both involve the UI middleware and its role in handling UI clients and their interactions with the system.","7acb6788-a468-3ade-aede-1cfd1be46471":"Yes.","89826bdd-f68c-349b-886b-8aa27de7de24":"No, these two requirements are not related. The first requirement is about the behavior of the _ObstacleAvoidance_ system when it is active, while the second requirement is about the state of the UAV's onboard ObjectAvoidance status.","8a3627d7-3575-3180-ade1-a8291f914666":"Yes.","036cdba2-6324-39e8-b0d3-41c537d8d590":"No, these two requirements are not directly related. The first requirement is about establishing a communication protocol between a ground station and Dronology, while the second requirement is about handling multiple ground stations at the same time.","5c7341ad-eb0f-3dbd-8d30-a6bb8a9ab5c5":"Yes, these two requirements are related because they both involve the UI middleware and its ability to support route assignment to UAVs. The first requirement states that when a UAV is selected, the RouteAssignmentUI shall display its active flight plans, which suggests that the UI middleware is responsible for displaying this information. The second requirement states that the UIMiddleware shall assign the list of waypoints from a route to an active UAV in order to create a flight plan, which implies that the UI middleware is also responsible for assigning routes to UAVs. Therefore, these two requirements are related because they both involve the UI middleware and its ability to support route assignment to UAVs.","8fdffabf-4041-3854-8dcd-4858cd09b933":"No, the two requirements are not related. The first requirement is for displaying a list of existing routes, while the second requirement is for modifying existing routes.","0b6dea31-ba6c-3e91-a76a-bb81da27ff50":"Yes","a2c5c52d-c017-3d70-a615-e7cdb872bae5":"Yes, these two requirements are related because they both involve the transmission of data from the Ground Control Station (GCS) to the GCS Middleware. The first requirement specifies that the GCS shall transmit UAV monitoring data, while the second requirement specifies that the GCS shall send the UAV's current properties to the GCS Middleware when they are received from the UAV.","f9ec03fa-40df-344e-8de4-4dfea17b7953":"Yes, these two requirements are related because they both deal with the topic of monitoring and receiving messages in the context of Dronology software development. The first requirement mentions that the _DronologyRuntimeMonitor_ shall be able to receive messages from any Dronology component, while the second requirement provides means for defining wildcards i.e. a client receives messages from all topics associated with the wildcard. Both requirements are related because they both involve monitoring and receiving messages in some way or another.","c3d68c2c-efde-389c-9ecb-8be14853496a":"Yes, the two requirements are related because they both deal with the concept of UAV types and their attributes. The first requirement specifies that each UAV should be assigned a specific type, while the second requirement states that different types of UAVs should have different icons. Therefore, these two requirements are related because they both involve the definition and use of UAV types in some way.","ac2c990b-b2e7-37f1-b063-9e7d5f1bcda2":"Yes.","b5863702-2dec-3542-8a4f-6466a1601c5f":"Yes, these two requirements are related because they both refer to the same artifact: the route description. The first requirement specifies that each route should have a unique ID, a textual description, and a set of waypoints, while the second requirement states that the UI shall provide respective fields for displaying and modifying these attributes. Therefore, these two requirements are related because they both concern the structure and content of the route description.","22a24fa0-df94-3682-a4f0-9c345a54dcdc":"Yes.","60f1480c-7013-3f9e-9765-ac33c9f5ab69":"Yes.","24833b28-3a2d-3215-997a-9798518a792d":"Yes, these two requirements are related because they both involve displaying information about UAVs and their flight plans. The first requirement asks for the display of active flight plans when a UAV is selected, while the second requirement requests pending flight plans from the UI Middleware and displays them.","bee37b7a-084e-3ab5-adc5-768eea41080c":"No.","fd8e1cb6-6807-36b5-a256-137b39947856":"Yes, these two requirements are related because they both involve coordinate system conversion. The first requirement is about converting coordinates between different formats, while the second requirement is about transforming coordinates from a default representation to n-vectors. Both of these tasks require the use of a coordinate system, and therefore they are related.","a8691c09-aeca-3e88-808b-6993a2897425":"Yes, these two requirements are related because they both involve the UI Middleware and the RouteAssignmentUI. The first requirement is about assigning routes to a UAV, which requires the UI Middleware to update the assignment in Dronology. The second requirement is about transmitting new route assignments to the UI Middleware, which is necessary for the first requirement to be fulfilled.","5061a19f-e052-3cad-805b-a9b93e1c8258":"Yes, these two requirements are related because they both involve the GCS (Ground Control Station) and the UAV (Unmanned Aerial Vehicle). The first requirement is about allowing the GCS to reconnect to the UAV after a disconnection, while the second requirement is about closing the connection with the UAV if it is incorrectly registered. Both requirements are related because they both involve the GCS and the UAV, and they both have something to do with the communication between these two entities.","edd9ea97-f0ef-37c1-b492-550164c0955a":"Yes.","364db069-05d0-3438-8d09-4344d05b1ff6":"Yes, these two requirements are related because they both deal with the concept of a flight route in the context of software development artifacts. The first requirement defines what a flight route is and how it should be represented, while the second requirement ensures that any flight routes received from the UI middleware are valid and can be used for navigation purposes.","a4fcd2e8-7025-3349-96fa-3380e70b57c7":"Yes.","171557b6-8fdf-3bb5-b2f3-2baf4348c06d":"Yes, the two requirements are related because they both involve the GCSMiddleware and its connection to other components in the system. The first requirement specifies that the GCSMiddleware should handle multiple GCS devices, while the second requirement specifies that the GCSMiddleware should specify a predefined port where GCS devices can connect. Therefore, these two requirements are related because they both involve the GCSMiddleware and its role in connecting to other components in the system.","172be02a-7d86-37af-aa06-a845f71e2ddc":"Yes, the two requirements are related because they both involve logging of flight plan-related events. The first requirement specifies that the ActivityLogger should log all flight plan-related events, while the second requirement states that all flight plans executed and waypoints reached shall be logged to a dedicated flight log file. Therefore, these requirements are related as they both deal with logging of flight plan-related events.","c37d08f1-bf45-34cc-993a-ea6dd41e9eb2":"Yes, these two requirements are related because they both deal with modifying or deleting flight plans assigned to a UAV. The first requirement allows users to modify the routes of flight plans that have not yet been executed, while the second requirement allows users to delete flight plans that have not yet been executed.","1cb27fbb-1ba3-3a72-b71a-474a4ce85d68":"Yes, these two requirements are related because they both involve the use of a software tool called Mission Planner to manage and coordinate the flight operations of multiple Unmanned Aerial Vehicles (UAVs). The first requirement is focused on allowing users to apply flight operations to one or more selected UAVs using the RealTimeFlightUI, while the second requirement is focused on synchronizing and coordinating the flights of multiple UAVs using Mission Planner.","58e122a0-6b90-3111-9bb5-9b2591456ccd":"Yes","acb3215b-3840-3615-a089-fd91d6e695f9":"Yes, these two requirements are related because they both involve the use of waypoints in a flight plan. The first requirement specifies how waypoints should be defined, while the second requirement specifies that when a UAV reaches a waypoint, a log event should be created to record the coordinates of the waypoint and other relevant information.","b2739aae-af9c-3fe5-b862-4566f8ae49ef":"Yes","5132b839-7a7d-3e7d-9f21-a4d79bc2775a":"Yes.","174a8df7-5a37-3a34-9467-550b61a28535":"Yes, these two requirements are related because they both involve the handling of messages between a Ground Control Station (GCS) and an Unmanned Aerial Vehicle (UAV). The first requirement states that the GCSMiddleware shall handle state messages, monitoring messages, and mode change messages received from the GCS. The second requirement states that the GCS requests the UAV's properties every {{UAV_MESSAGE_MONITORING_FREQUENCY}} seconds, which implies that the GCS is sending monitoring messages to the UAV. Therefore, these two requirements are related because they both involve the handling of messages between a GCS and an UAV.","01cf933a-4e16-3aad-8af6-98e7656713e0":"Yes.","252f700a-493a-35f6-8641-277e4bb6340c":"No, these two requirements are not related. The first requirement is about forwarding commands from the GCS to a specific UAV, while the second requirement is about sending the current coordinates of a UAV to the GCS Middleware.","e83c04dc-f2bc-3c39-8ea5-8dfbd4bc120a":"Yes, these two requirements are related because they both deal with flight patterns and synchronization. The first requirement mentions predefined flight patterns that can be managed by the MissionPlanner, while the second requirement describes a specific type of flight pattern (synchronized landing) that involves coordinating multiple UAVs to land at the same time.","3f4c32d5-c32c-39c2-8695-953849ea923d":"Yes, these two requirements are related because they both deal with coordinating the flight patterns of multiple UAVs as part of a mission. The first requirement is focused on ensuring that the flight paths of the UAVs do not overlap, while the second requirement is focused on synchronizing and coordinating the flights of the UAVs to ensure that they are all flying in unison.","0918359d-165a-3904-affc-28811c8f14d8":"No, these two requirements are not related. The first requirement is about forwarding commands from the GCS to a specific UAV, while the second requirement is about sending the current properties of a UAV to the GCSMiddleware.","35c6ea9a-0495-3b6a-a328-62704e617983":"No.","2be0ed68-3ee9-34be-a0d7-1ceea5c74f97":"Yes, these two requirements are related because they both involve the UI middleware and its functionality in providing a list of active UAVs. The first requirement simply states that the UI middleware shall provide a list of all active UAVs, while the second requirement provides more detailed information about the data that the UI middleware should return for each active UAV, including location, battery level, ground speed, and health status.","cc0542a0-1f30-3892-ac47-4fbd0f3a2365":"Yes, these two requirements are related because they both involve the notification of users in some way. The first requirement is about notifying users when an emergency occurs, while the second requirement is about allowing clients to register for notifications whenever unexpected events occur. Both of these requirements involve the use of a user interface (UI) and the ability to notify users of important information.","a22bed4e-dd62-3d0d-9a9f-3ec285a72a29":"Yes, these two requirements are related because they both involve the use of a map component and its interaction with other components in the system. The first requirement mentions that the _MapComponent_ shall support different types of map layers, which suggests that it will be used to display multiple types of maps on the screen. The second requirement mentions that the _UIRealTimeFlightView_ shall display an icon on the map for each registered UAV based on its current location, which implies that the map component is being used to display the location of the UAVs in real-time. Therefore, these two requirements are related because they both involve the use of a map component and its interaction with other components in the system.","d1f18d6c-0f01-33e5-813f-fb6c72f7cffe":"Yes.","85d01ac7-bbde-3bb7-ab58-3f670e3c400b":"Yes, the two requirements are related because they both deal with the management of flight plans for UAVs. The first requirement specifies that there should be a managed list of pending flight plans for each UAV, while the second requirement states that each UAV has zero or more pending flight plans. These requirements are related because they both involve managing and maintaining flight plans for UAVs, which is an important aspect of software development in this context.","2e487d51-f293-30ea-af12-5c70d7bd9edb":"Yes","46baa283-a632-314a-8542-89c51a0d764a":"Yes, these two requirements are related because they both deal with the management of flight routes. The first requirement ensures that all flight routes are valid, while the second requirement specifies the standard format for specifying flight routes in XML.","c8097f73-f004-3846-97c0-ee76570ec50b":"Yes.","94add82b-a847-3025-8906-31244b1f7a95":"No, these two requirements are not directly related. The first requirement is about assigning flight plans to specific UAVs based on their ID, while the second requirement is about allowing users to select a UAV and assign routes to it from an available route list.","08ed7416-62a5-3599-8927-7aba2357c167":"Yes, these two requirements are related because they both deal with the UI middleware and its functionality. The first requirement states that the UI middleware shall provide an interface for registering UI clients, while the second requirement specifies that a client shall register to the UI middleware using a unique id. Therefore, these two requirements are related because they both involve the registration process of clients with the UI middleware.","306312b3-a92e-329c-8f95-b36b49614ec1":"Yes, these two requirements are related because they both involve the display of a map on the screen. The first requirement specifies that the map should be loaded at a specific location when the view is initially displayed, while the second requirement specifies that the map should be displayed with a default zoom level and center coordinates specified in a configuration file.","e50a4ca3-6ee9-3831-9909-6fd9bc2664b7":"No, these two requirements are not related. The first requirement is about assigning a route to an active UAV, while the second requirement is about modifying an existing flight route with a given ID.","ee1d9d83-347e-3811-a4c4-fd0c7def2a2f":"Yes, these two requirements are related because they both involve the _RouteCreationUI_ and its ability to distinguish between different types of waypoints (starting, ending, and intermediate) and support route creation and modification in visual mode.","0cfed8e4-5ac0-388e-ad58-40d9ca486ed8":"Yes.","c75fbdb5-734f-305a-8fbe-aeaf65d7e56d":"Yes, these two requirements are related because they both deal with the management of flight plans for unmanned aerial vehicles (UAVs). The first requirement specifies that only one flight plan can be executed at a time for each UAV, while the second requirement states that when a flight plan is assigned to a specific UAV, it should be placed in the UAV's execution queue. Therefore, these two requirements are related because they both involve the management of flight plans and their execution by UAVs.","fbe04f22-0c52-3508-a8b8-62951047849c":"Yes.","f599162f-18df-3043-9e2f-caaaba678f4f":"Yes","7878cce9-aa83-3770-b71c-cffac65f4561":"Yes.","0e4d93f9-0be4-3d4f-8838-98fc95a805a4":"Yes, these two requirements are related because they both deal with the simulation of a goto command in an internal simulator. The first requirement specifies that the internal simulator should update the location of the UAV at increments of {{SIMULATION_STEP_SIZE}} meters moving it towards the target destination until the destination is reached, while the second requirement specifies that the internal simulator should compute the next coordinate based upon the angle of travel and the step-size. Therefore, these two requirements are related because they both involve the simulation of a goto command in an internal simulator.","7a0b80d4-6892-3861-84cf-9b39d390cd1a":"Yes, these two requirements are related because they both deal with emergency situations and the notification of users in case of an emergency. The first requirement mentions that the RealTimeFlightUI shall notify users when an emergency occurs, while the second requirement states that when the UAV's battery level drops below a predefined threshold, the UAV health indicator is activated. Both requirements are related to the notification and monitoring of emergencies in the context of unmanned aerial vehicles (UAVs).","b7c70dcd-627f-3922-a48e-13a9060b4ee2":"Yes, these two requirements are related because they both deal with message frequency and how it is assigned and adjusted in the system. The first requirement specifies that the GCS shall assign a message frequency for all UAVs, while the second requirement states that when the GCS receives a set frequency command from the GCSMiddleware, it shall adjust its message frequency accordingly. Therefore, these two requirements are related because they both involve changes to the message frequency in some way.","2c35f8e7-2a50-3e44-9928-a2226beeb268":"Yes, these two requirements are related because they both deal with the behavior of a virtual UAV in an internal simulator. The first requirement is about approximating the behavior of a UAV, while the second requirement is about simulating takeoff in the internal simulator.","6a22eb18-a24f-3fc2-b20d-4e0d55b0c358":"Yes, these two requirements are related because they both involve the UI middleware and its interaction with other components in the system. The first requirement states that when a route is assigned or removed from a UAV, the UI middleware shall notify Dronology, which suggests that the UI middleware is responsible for communicating changes to the route assignment to Dronology. The second requirement states that the UI middleware shall assign the list of waypoints from a route to an active UAV in order to create a flight plan, which implies that the UI middleware is responsible for creating and managing the flight plans for the UAVs. Therefore, these two requirements are related because they both involve the UI middleware and its role in managing the communication between the system components.","2f61c261-0de6-344e-b6ce-7eb65118d56b":"Yes, these two requirements are related because they both deal with ensuring that only one instance of each registered drone is active at any time. The first requirement states that the _UAVActivationManager_ shall ensure that only one instance of each registered drone is active at any time, while the second requirement states that when receiving a new activation request from the _GCS_Middleware_, the _UAVActivationManager_ shall check that the presented {{UAV_ID}} represents a currently registered and non-activated UAV.","4c50c933-faf1-338f-b096-8693cd09c5e5":"Yes.","1bea1e71-e96f-302a-8e39-86663706c72a":"No, these two requirements are not related. The first requirement states that the map should be positioned at a pre-defined location when loading the map view, while the second requirement specifies that unless otherwise configured in the configuration parameters, the map shall be centered at White Field University of Notre Dame South Bend IN.","bdac906c-a125-38d0-9d0a-4553ef2feaf1":"Yes.","ea292651-cb6d-34df-8884-96149ac33c8a":"Yes, these two requirements are related because they both involve the GCS (Ground Control Station) and the GCSMiddleware. The first requirement states that the GCS shall report newly connected UAVs to the GCSMiddleware, while the second requirement states that the GCS shall send the UAV's current properties to the GCSMiddleware when they are received from the UAV. Therefore, these two requirements are related because they both involve the GCS and the GCSMiddleware in some way.","ac389e44-dedf-3c5d-a319-2286948eaa55":"Yes, these two requirements are related because they both deal with the user interface (UI) of a software system that manages UAVs. The first requirement specifies that the UI should allow users to apply flight operations to one or more selected UAVs, while the second requirement states that for each activated UAV, the UI shall display information about that UAV, such as its longitude, latitude, altitude, ground speed, and battery level, etc.","44663d7c-e98e-3a9f-837c-ccd356e09343":"Yes, these two requirements are related because they both involve the GCSMiddleware and its interaction with other components in the system. The first requirement states that the GCSMiddleware shall forward commands sent from Dronology to a GCS, while the second requirement states that the GCS shall send the UAV's current coordinates to the GCSMiddleware when they are received from the UAV. Therefore, these two requirements describe different aspects of how the GCSMiddleware interacts with other components in the system, but they are both related to its overall function as a middleware component.","89fb8ebc-c0ec-3e8c-8df8-4b6cb456aa31":"Yes, these two requirements are related because they both deal with the display of information about activated UAVs. The first requirement asks for the name and status of all currently activated UAVs to be displayed, while the second requirement asks for the name, state, battery level, speed, and current coordinates of each UAV to be displayed. Both requirements are related because they both involve displaying information about activated UAVs in some way.","b87d61fa-8b4a-3b1d-bff1-8ef47e975abc":"Yes, these two requirements are related because they both involve the connection between the GCS and the UAV. The first requirement states that if the connection to the GCS from the GCSMiddleware is lost, then the GCSMiddleware shall notify Dronology and deactivate all associated UAVs. This means that if the connection is lost, the GCSMiddleware will take action to ensure that the UAVs are deactivated.\n\nThe second requirement states that if the GCS receives notification that the UAV is incorrectly registered, then the GCS closes the connection with the UAV. This means that if the GCS detects an error in the registration of a UAV, it will take action to close the connection with that UAV.\n\nTherefore, these two requirements are related because they both involve the connection between the GCS and the UAV, and both require the GCS to take action when there is an issue with the connection or the registration of a UAV.","c5c19a48-4c00-393c-b8d7-d45a71d71ca0":"Yes, these two requirements are related because they both deal with the assignment of flight plans to UAVs. The first requirement states that if a scheduled flight is not manually assigned to a UAV, it shall be automatically assigned by the _SingleUAVFlightPlanScheduler_. This means that the scheduler will assign routes to UAVs based on their availability and other factors. On the other hand, the second requirement states that when a flight plan is assigned to a specific UAV, it shall be placed in the UAV's execution queue. This implies that the scheduler will also have the responsibility of placing the assigned flight plans into the correct execution queue for the UAV. Therefore, these two requirements are related because they both involve the assignment and scheduling of flight plans to UAVs.","f0f029c2-124a-359b-8b71-c6480ff5398e":"Yes","84ed234a-8d23-3e58-8afd-497b36e23133":"Yes, these two requirements are related because they both deal with the creation and modification of routes. The first requirement describes the structure of a route, including its unique ID, textual description, and set of waypoints, while the second requirement outlines the user interface for creating and modifying routes in visual mode.","a289f405-085b-32fb-bab3-6fe3df985151":"Yes, the two requirements are related because the first requirement states that if a scheduled flight is not manually assigned to a UAV, the SingleUAVFlightPlanScheduler shall assign the route automatically to an UAV. This means that the user does not have to manually select and assign routes to each UAV, but rather the system will automatically assign routes based on the available routes list. Therefore, the second requirement is related to the first one because it describes a scenario where the user has selected a UAV and wants to assign routes to it from an available route list, which is already handled by the SingleUAVFlightPlanScheduler in the first requirement.","36933e3d-796f-398e-935e-07cd9036edb1":"Yes.","3fac8e37-43be-3a9e-a9e2-7d0647c5075f":"Yes","018feeda-755b-3a2c-8acb-e61caac461a8":"Yes, these two requirements are related because the first requirement mentions the \"VehicleCore\" and the second requirement mentions the \"GCS\". The \"GCS\" is likely to be a centralized system that manages communication between the vehicles and the ground control station (GCS), so it makes sense that the \"VehicleCore\" would need to support UAVs connected via the GCS. Additionally, the second requirement mentions transforming commands into a vehicle-specific format, which suggests that the \"GCS\" is responsible for this transformation. Therefore, these two requirements are related because they both involve the \"GCS\" and its role in managing communication between vehicles and the ground control station.","8b4edc17-1d05-3134-ad96-e83c9b5e4d16":"Yes, these two requirements are related because they both involve the _GCS_ (Ground Control Station) and UAVs (Unmanned Aerial Vehicles). The first requirement is about assigning a message frequency for all UAVs, while the second requirement is about requesting the current coordinates of each UAV at a specific frequency.","6b0fa847-1877-3415-894b-affee5569a69":"No","2c823515-1e84-3f2e-82e4-bfff436fdcb6":"Yes, these two requirements are related because they both involve the display of information on a map. The first requirement specifies that the Real-Time Flight UI shall display the location of active UAVs as icons on the map, while the second requirement states that the UI shall periodically request current locations of all registered UAVs from the UIMiddleware and update their locations on the map. Therefore, these two requirements are related because they both involve the same goal of displaying information on a map in real-time.","2a8a6d27-92bb-3937-8b47-b3a8e7f78ca2":"Yes","32f55249-9ecd-3bc8-aa5d-204ea50a2874":"Yes.","a7496059-8be8-3e77-b29a-52ab9ba3dea4":"Yes, these two requirements are related because they both involve the UI Middleware and its role in managing route assignments for UAVs. The first requirement states that the UI Middleware shall enable an existing route to be assigned to an active UAV, while the second requirement requires that when routes are assigned to a UAV, a request shall be sent to the UI Middleware to update the assignment in Dronology. Therefore, these two requirements are related because they both involve the UI Middleware and its role in managing route assignments for UAVs.","f015e582-6440-31af-8b33-d1b63f6b72d2":"No, these two requirements are not directly related. The first requirement is about establishing a maximum number of activated UAVs and rejecting any further activation requests when that limit is reached, while the second requirement is about activating registered UAVs based on their ID.","dbd26205-94be-33aa-82b6-c4a2d9fb92b8":"Yes.","57289bcd-c445-3604-b610-126a055669fb":"Yes.","f64f075d-49e4-3a40-87e9-b74d4cce2c7f":"Yes, these two requirements are related because they both involve displaying information about active UAVs on a map. The first requirement specifically mentions the Real-Time Flight UI and how it should display the location of active UAVs as icons on the map, while the second requirement describes how the UIRealTimeFlightView shall display an icon on the map for each registered UAV based on its current location.","fd5b455e-6af8-36f7-9671-1212f731101c":"No","6d94f076-8a6a-305f-9190-ff3224eab35a":"Yes, these two requirements are related because the first requirement specifies that when a takeoff command is given to the _InternalSimulator_, it should move the UAV to the takeoff altitude corresponding to its current longitude and latitude. The second requirement specifies that the {{TAKEOFF}} command shall specify the target altitude, which is used by the _InternalSimulator_ in the first requirement to determine the takeoff altitude.","1cc594e8-c55f-3528-bede-e893aabf67aa":"Yes, these two requirements are related because they both involve the UI middleware and its functionality. The first requirement is asking for the UI middleware to provide a list of all existing routes, which will be used by the second requirement to assign waypoints from a route to an active UAV in order to create a flight plan. Therefore, these two requirements are related because they both involve the UI middleware and its ability to manage and manipulate flight plans.","2cead43c-c888-3360-8138-56beff2d3dec":"Yes, these two requirements are related because they both involve the use of the UIMiddleware component in some way. The first requirement states that if a client registers for notifications, the UIMiddleware shall send notifications for specific events, while the second requirement states that a client shall register with the UIMiddleware to receive flight route event notifications whenever a flight route is created, modified, or deleted. Therefore, these two requirements are related because they both involve the use of the UIMiddleware component in some way.","cdd89145-340a-3772-8543-9f117e0834b4":"Yes, these two requirements are related because they both involve assigning routes to a UAV. The first requirement specifies that the _RouteAssignmentUI_ shall provide means to select an existing routes and assign them to a UAV, while the second requirement states that the user shall select a UAV and then assign routes to it from an available route list.","1ba19cd5-aaae-3cbc-8e1a-e17474936e5c":"Yes, the two requirements are related because they both involve the UI middleware handling control-related tasks for UAVs. The first requirement states that only one client can hold a control lock on a UAV at a time, while the second requirement requires the UI middleware to monitor the liveness of clients holding control locks and take appropriate action if a client's heartbeat is not received within a certain time frame.","4feb84d5-5f88-347e-b091-86aa2e1c0b66":"Yes","cfc87ebb-69a4-327d-abbb-1c4b00ae10f2":"Yes.","fe55d003-a651-3587-8091-894af06889ca":"No","d4207aef-b725-3929-91fc-cff421f52745":"Yes","024a0757-f1fa-30f0-be97-72e3bb17505a":"No, these two requirements are not directly related. The first requirement is about loading configuration parameters for the VaadinUI, while the second requirement is about requesting information about all activated UAVs from the UIMiddleware upon loading the UI.","f7a22607-a7c8-3b70-b21d-75d55d2e2983":"Yes, these two requirements are related because they both deal with the behavior of the _ObjectAvoidance_ system in different scenarios. The first requirement specifies that the system should only issue commands within the capabilities of the UAV, while the second requirement states that when a UAV is no longer in close proximity to an object, the system shall stop sending directives and the UAV will continue towards its destination. These requirements are related because they both involve the behavior of the _ObjectAvoidance_ system under different conditions, and therefore must be considered together when designing and testing the system.","4a86ddeb-298a-3ecc-9249-7a99ea66c38e":"No","504399f5-6395-34f6-a0e9-577527e90f3d":"No","2b295792-7b4c-36fd-b804-84468daeed2e":"Yes, the two requirements are related because they both involve working with UAVs and their flight plans. The first requirement asks for the display of a UAV's active flight plans when it is selected, while the second requirement asks for the assignment of routes to a UAV from an available route list. Both requirements require some level of interaction with the user and the system's ability to manage and display information related to UAVs and their flight plans.","304c65dc-5353-3e25-8c22-e6c50635fffc":"Yes, they are related. The first requirement is for the Groundstation-Middleware Communication Protocol and the second requirement is for the GCS connection to the GCS Middleware. Both requirements are related because they describe different aspects of how a GCS (Ground Control Station) communicates with its middleware.","261a7837-6584-3c1b-9b84-7a27dd898f43":"No, these requirements are not related. The first requirement specifies how to define a waypoint, including its longitude, latitude, and altitude. The second requirement specifies how to specify the direction between two coordinates using a velocity vector from the first coordinate. These two requirements are separate and distinct, and do not rely on each other.","bb7a3f60-2493-3127-a3b9-5ddf39340f55":"Yes, these two requirements are related because they both involve displaying a map in the UI of an application. The first requirement specifies that a map shall be displayed when the RealTimeFlightUI is loaded, while the second requirement specifies that the map shall be displayed with default zoom level and center coordinates specified in a configuration file.","54de96b1-f31a-33a6-8e5f-92ff923f0f14":"Yes.","7bc2654c-efd3-357e-a2ef-e930501781bf":"Yes.","e1cbdb65-82c2-3b3c-bfbb-74cd7e49b891":"No.","7281fe17-254c-3b7d-afc8-37b399eec71e":"Yes, these two requirements are related because they both deal with the assignment of flight plans to UAVs. The first requirement specifies that if a route contains a specific {{UAV_ID}}, the _SingleUAVFlightPlanScheduler_ shall assign the route to the given UAV. This means that the scheduler will only assign routes that contain the specified UAV ID to that UAV.\n\nThe second requirement, on the other hand, specifies that if a flight plan is not assigned to a specific UAV, the flight plan scheduler shall automatically assign it to the next available UAV. This means that if there are multiple UAVs available and no specific UAV ID is specified in the route, the scheduler will assign the flight plan to the next available UAV.\n\nTherefore, these two requirements are related because they both deal with the assignment of flight plans to UAVs, but they have different conditions under which they apply. The first requirement applies when a specific UAV ID is specified in the route, while the second requirement applies when no specific UAV ID is specified and the scheduler needs to assign the flight plan to the next available UAV.","c9dd0c3e-515f-392d-a61d-69b436dba555":"Yes, these two requirements are related because they both deal with the concept of virtual UAVs and their unique identifiers. The first requirement states that the VehicleCore shall support virtual UAVs, while the second requirement specifies that internally simulated UAVs should be assigned unique IDs.","2a59cf20-3c84-3dbd-a251-9654edabe96d":"Yes, these two requirements are related because they both involve the activation of UAVs and the assignment of unique IDs to them. The first requirement specifies that the VehicleCore shall assign a unique ID to each activated UAV, while the second requirement states that if the presented UAV_ID represents a currently registered UAV, then the UAVActivationManager shall activate the UAV. Therefore, these two requirements are related because they both involve the activation of UAVs and the assignment of unique IDs to them.","150ecd8b-a306-3052-9d6a-8ef171bc8fab":"Yes, they are related. The first requirement describes the protocol used for communication between the ground station (GCS) and the middleware, while the second requirement describes the handshaking process that takes place during this communication.","08444d8e-6344-3fdf-b906-5cb910730855":"Yes, these two requirements are related because they both involve coordinate system conversion. The first requirement is about converting coordinates between different formats, while the second requirement is specifically about transforming coordinates from the default representation to p-vectors.","3aa20fbd-ea48-3803-9803-a152335a506b":"Yes.","9e70483d-a88c-37e6-ab1f-2d208084377a":"No, these requirements are not related. The first requirement is asking for the ability to calculate distances between two coordinates, while the second requirement is asking for the accuracy of those distances to be within 1 meter over a distance of 400,000 meters. These are two separate concerns and do not depend on each other.","8bed0e55-55e1-3243-ba63-8efeee5b6486":"Yes, these two requirements are related because they both involve the _FlightRouteManager_ class and its responsibilities. The first requirement states that the _FlightRouteManager_ shall persist flight routes, while the second requirement states that the _FlightRouteManager_ shall check that a new or modified flight route is valid before persisting it. Therefore, these two requirements are related because they both involve the same class and its responsibilities.","cb6dece1-d1e8-3fc3-8e6b-3af6f26d4dcf":"Yes, the two requirements are related because they both deal with the management of control locks for UAVs in the context of a UI middleware. The first requirement states that only one UI client can control a UAV at a time, while the second requirement specifies that the UI middleware shall forward control requests from UI clients to release a control lock on a UAV. Therefore, both requirements are concerned with ensuring that there is only one active control client for each UAV and that the control locks are properly managed by the UI middleware.","12998bb9-9774-3547-aea2-857456c42272":"No.","568f8560-d827-3569-90e4-4efb9100313b":"Yes, these two requirements are related because they both deal with the management and display of information about UAVs (Unmanned Aerial Vehicles). The first requirement is focused on storing and managing the meta-data of UAVs, while the second requirement is focused on displaying information about UAVs in a user interface.","23d04a2d-3529-34ec-9b3b-4b25f07a0898":"Yes, these two requirements are related because they both involve the UI middleware and its ability to accept and activate mission plans, as well as assign waypoints from routes to UAVs in order to create flight plans.","c986cc7a-9ab8-3868-887b-c2fc30be1863":"Yes.","ec54bdad-572d-3b60-855c-307c2dbbe420":"Yes, these two requirements are related because they both deal with the same artifact - the route. The first requirement describes the structure of a route, including its unique ID, textual description, and set of waypoints, while the second requirement specifies that the UI shall display the waypoints and their connections for an active route. Therefore, these two requirements are related because they both involve the same artifact - the route - and how it is represented in the UI.","150a9abf-568f-3e61-b45b-e2d1c535b3ef":"Yes, these two requirements are related because they both involve logging events related to flight plans. The first requirement asks for a logger that will log all flight plan-related events, while the second requirement asks for a specific type of log event (creation) when a flight plan is executed.","cf0c0208-8c11-30b8-8757-c944bb42b59c":"No.","d27b8332-f035-34d9-bc61-d173fe198672":"Yes.","3b90f6a3-8ebc-3bbd-921e-7081abef71e1":"Yes.","e3e6a73a-5c20-3592-8138-f5f44002201c":"Yes, these two requirements are related because they both deal with the user interface (UI) of a software system that is designed to manage and control unmanned aerial vehicles (UAVs). The first requirement specifies that the UI shall notify users when an emergency occurs, while the second requirement specifies that the UI shall apply emergency actions to UAVs based on user requests. Therefore, these two requirements are related because they both involve the UI of the software system and its ability to respond to emergencies in a timely and effective manner.","e83611e5-fcf7-3e50-8565-6dbc30df7f78":"Yes, these two requirements are related because they both deal with the visual representation of waypoints in a flight route. The first requirement is about distinguishing between starting, ending, and intermediate waypoints, while the second requirement is about changing the color of waypoints to differentiate them from each other.","e72923a4-f0cc-3d89-a7bb-497caeba5b4e":"Yes, these two requirements are related because they both involve the scheduling of flight plans for UAVs. The first requirement is about scheduling a route for execution, while the second requirement is about assigning a flight plan to a specific UAV and placing it in its execution queue. Both requirements are concerned with managing the flow of flight plans and ensuring that they are executed correctly.","2ded8f41-350b-3fa5-945d-5e3355e7ceb1":"Yes, these two requirements are related because they both involve the simulation of movement and location updates for a UAV. The first requirement specifies that the _InternalSimulator_ should simulate the movement of the UAV towards a target destination using increments of {{SIMULATION_STEP_SIZE}} meters, while the second requirement states that the _InternalSimulator_ should continue moving in steps towards the target coordinates until the target has been reached.","ba1071b5-3f98-3b19-8c8b-46edcdf92870":"No, these two requirements are not related. The first requirement is about assigning an existing route to an active UAV, while the second requirement is about creating a new flight route with a unique ID.","974ca07f-9bf8-34e4-a6f1-6190bb2f03c1":"No, these two requirements are not related. The first requirement is about logging events related to a GCS (Global Communication System), while the second requirement is about informing the GCS of the result of an activation request.","cdba0cd5-ba6a-384c-aaad-7de3d94e4afb":"Yes.","ac4a8ac6-d2be-3fe4-ba18-91d780f0133c":"Yes, these two requirements are related because they both involve the automatic assignment of flight plans to UAVs. The first requirement states that if a scheduled flight is not manually assigned to a UAV, the SingleUAVFlightPlanScheduler shall assign the route automatically to an UAV. The second requirement states that if a flight plan is not assigned to a specific UAV, the flight plan scheduler shall automatically assign it to the next available UAV. Both requirements involve the same process of automatic assignment of flight plans to UAVs, and therefore they are related.","f9e8a9ab-15e7-329c-9147-02defbeb407d":"Yes.","837a2af9-8097-36d3-a8f4-9573b6675d56":"Yes.","f8365d21-5b70-3bfb-ab0b-4a95d77126df":"Yes, these two requirements are related because they both deal with the same artifact (the flight plan) and its state (active vs. aborted). The first requirement specifies that when a request is made to cancel an active flight plan, the scheduler should abort the currently executing flight plan of an UAV. The second requirement then states that when a flight plan is aborted, it should be removed from the associated UAV. Therefore, these two requirements are related because they both involve the same artifact (the flight plan) and its state (active vs. aborted).","cd9b4ffb-c2a5-3539-abf3-1a9723e11812":"Yes, these two requirements are related because they both involve the transmission of data between different components of the system. The first requirement is about sending a newly created or modified route to dronology, which suggests that there may be some kind of communication or data exchange happening between the _RouteCreationUI_ and dronology. Similarly, the second requirement is about transmitting new route assignments to the UI Middleware, which implies that there may be some kind of communication or data exchange happening between the UI Middleware and dronology as well.","d4e7fec7-5592-3c51-9925-796fba666d88":"No, these two requirements are not related. The first requirement is for a simulation of a goto command in an internal simulator, while the second requirement is for a simulation of a goto command in an NVECSimulator.","8b2caefc-31aa-32dd-bb88-4f563e2d30ee":"Yes, these two requirements are related because they both involve the GCS (Ground Control Station) and its interaction with other components in the system. The first requirement is about logging events related to the GCS, while the second requirement is about forwarding UAV coordinates from the GCS to the Middleware. Both of these requirements involve the GCS as a central component in the system, so they are related.","2851c7cc-5c24-34f4-897b-624df994c3d1":"Yes, these two requirements are related because they both involve the cancellation of a mission or flight plan. The first requirement states that when requested, the MissionPlanner shall cancel the active mission, while the second requirement states that when the user presses the cancel pending flight plan button, a request is sent to the UI_Middleware to cancel the flight. Both requirements are related because they both involve the cancellation of a mission or flight plan, and therefore share some common functionality.","541c9a5d-8377-3baf-896f-a469ad724c92":"Yes, these two requirements are related because they both deal with the assignment of flight plans to UAVs. The first requirement specifies that if a route contains a specific {{UAV_ID}}, then the _SingleUAVFlightPlanScheduler_ shall assign the route to the given UAV. This means that the scheduler will select a specific UAV for the route based on its ID.\n\nThe second requirement states that when a flight plan is assigned to a specific UAV, it shall be placed in the UAV's execution queue. This means that once the flight plan has been assigned to a specific UAV, it will be executed by that UAV and will be stored in its execution queue for future reference.\n\nTherefore, these two requirements are related because they both deal with the assignment of flight plans to UAVs and the placement of those flight plans in the UAV's execution queue.","f3d4c0e7-313c-3a98-bda3-27e9f5834db7":"No","1e634e22-3388-38a1-8910-7bdbfdbe2a2b":"Yes, these two requirements are related because they both deal with the concept of flight routes and how they should be defined and represented. The first requirement defines a flight route as an ordered sequence of waypoints, while the second requirement specifies that flight routes should be specified in a standard XML format.","eb16d9ca-6d3b-3b5c-8489-b72d86627e5c":"Yes, these two requirements are related because they both involve the _RouteCreationUI_ component. The first requirement specifies that the UI should validate the route altitude and speed values, while the second requirement specifies that the UI should support route creation and modification in tabular mode by displaying an editable table showing each waypoint and velocity of the UAV approaching the waypoint.","22f9185c-4b43-386f-9ba4-614a28e778df":"Yes.","6f773ed9-65d4-3580-be24-757e9cf7a247":"Yes.","41e15a7d-f6e7-37a8-869f-9f62fbbea72b":"No, these requirements are not related. The first requirement is for an internal simulator that simulates landings by moving the UAV from its current altitude to a ground altitude corresponding to its current longitude and latitude. The second requirement is for an NVECSimulator that immediately changes the UAV's current altitude to the ground altitude when given a land command. These two requirements are different in terms of their scope, purpose, and implementation.","b2b2e002-ff0a-3415-8fcf-af1dfd5b2901":"Yes, these two requirements are related because they both involve working with routes and route creation. The first requirement asks for the display of existing routes, while the second requirement asks for the ability to create, modify, and delete waypoints in visual mode. Both require a user interface that allows users to interact with routes in some way.","091a3b9d-9468-30bc-93a7-fcfdf215e481":"Yes, these two requirements are related because they both involve the use of the UIMiddleware component in some way. The first requirement states that if a client registers for notifications, the UIMiddleware shall send notifications for specific events, while the second requirement states that a client may register with the UIMiddleware to receive notifications whenever unexpected events occur. Therefore, these two requirements are related because they both involve the use of the UIMiddleware component in some way.","813d9e55-620c-34b1-b8f3-ae450267cd09":"Yes, the two requirements are related because they both involve modifying routes in some way. The first requirement asks for the ability to delete a route, while the second requirement asks for the ability to modify existing routes.","9f936437-08a9-35d5-abc2-08c0582e8e57":"Yes, these two requirements are related because they both involve the use of the GCSMiddleware and the UAVActivationManager. The first requirement states that the GCS shall report newly connected UAVs to the GCSMiddleware, which suggests that the GCS is responsible for communicating with the GCSMiddleware in some way. Similarly, the second requirement states that the GCSMiddleware shall call the UAVActivationManager to request UAV activation, which implies that the GCSMiddleware is also involved in the process of activating a new UAV. Therefore, these two requirements are related because they both involve the use of the GCSMiddleware and the UAVActivationManager.","4b1e05ce-e621-310a-b211-b4e645a574dd":"Yes, these two requirements are related because they both involve the UI middleware and its ability to modify flight routes. The first requirement states that the UI middleware should provide support for modifying flight routes, while the second requirement states that the UI middleware should assign the list of waypoints from a route to an active UAV in order to create a flight plan. Therefore, these two requirements are related because they both involve the UI middleware and its ability to modify flight routes.","369e3b6f-3f08-3c5b-a957-69f2e9d869b3":"Yes, the two requirements are related because they both involve the use of VaadinUI and UIMiddleware in the context of controlling a UAV. The first requirement states that when a command is issued by the VaadinUI for an UAV, it shall request control of that UAV, which implies that the VaadinUI needs to communicate with the UIMiddleware to obtain control over the UAV. Similarly, the second requirement states that the UIMiddleware shall forward control requests from UI clients to hold a control lock on a UAV, which means that the UIMiddleware is responsible for managing and distributing control of UAVs based on incoming requests from various sources, including the VaadinUI. Therefore, both requirements are related because they involve the use of VaadinUI and UIMiddleware in the context of controlling a UAV.","8f0c03be-ec8e-3ccd-af99-687ccb9348af":"No, these two requirements are not related. The first requirement is for calculating directions between two coordinates, while the second requirement is for converting a coordinate system to a p-vector representation. These are two separate tasks that do not depend on each other.","ddd8f62e-05c6-32d4-9c54-742278237098":"Yes, these two requirements are related because they both involve the use of the flight plan scheduler. The first requirement states that the flight plan scheduler should schedule a route for execution when requested, while the second requirement states that if a flight plan is not assigned to a specific UAV, the flight plan scheduler shall automatically assign it to the next available UAV. Therefore, these two requirements are related because they both involve the use of the flight plan scheduler and its ability to schedule and assign flight plans.","1fca52cd-2da5-3c6d-a37d-6368f4e1920e":"Yes.","2775a2e3-28fb-340c-a77b-90f0c9a1d565":"Yes.","5d72ec83-a7be-3a58-9885-4095a0051213":"Yes, these two requirements are related because they both involve the GCS (Ground Control Station) transmitting data to the UAV (Unmanned Aerial Vehicle). The first requirement states that the GCS shall transmit the UAV's properties to the GCSMiddleware, while the second requirement states that the GCS requests the UAV's properties every {{UAV_MESSAGE_MONITORING_FREQUENCY}} seconds. Therefore, these two requirements are related because they both involve the GCS transmitting data to the UAV.","7f2b3909-abc5-37ce-bd17-6983376c6b15":"Yes, these two requirements are related. The first requirement states that when a new or modified route is created in the _RouteCreationUI_, it should be sent to dronology. The second requirement specifies that the route information should be represented using the Standard Route XML format and transmitted to the _UIMiddleware_. This means that the _UIMiddleware_ will receive the route information in the Standard Route XML format, which is consistent with the first requirement. Therefore, these two requirements are related because they both involve the transmission of route information from the _RouteCreationUI_ to the _UIMiddleware_, but with different specifications for the format of that information.","d75980a7-cc7c-377a-ad63-f8b6093a96d8":"Yes","22fb1c54-4a90-390c-aac9-44245bc68a85":"No","e43ec157-072c-383f-b26f-51168ef4c4a1":"Yes.","6ba26ee4-fd11-36a4-8876-ae80deff5939":"Yes, these two requirements are related because they both involve displaying information about UAVs and their flight plans. The first requirement asks for details about a specific UAV and its flight plan, while the second requirement requests pending flight plans from the UI Middleware and displays them.","8be195d5-adeb-3620-ad92-3b5e069369c8":"Yes, these two requirements are related because they both deal with the state transition of a UAV. The first requirement specifies that the VehicleCore shall transition the UAV between states according to allowed state transitions as depicted in the UAV state transition diagram, while the second requirement specifies that when a UAV in the TAKING_OFF state achieves the target altitude it transitions to FLYING state. Both requirements are related because they both involve the state transition of a UAV and the allowed state transitions.","3cb4a65c-5883-3c32-b954-5d0b5dd3aab0":"Yes, these two requirements are related because they both involve the use of waypoints during a flight plan execution. The first requirement states that the VehicleCore shall send the next waypoint to the UAV when executing a flight plan, while the second requirement states that a log event shall be created when a UAV reaches a waypoint while executing a flight plan. Therefore, these two requirements are related because they both involve the use of waypoints and their role in the execution of a flight plan.","6b281168-590d-3244-a25e-229ff0e9f470":"Yes, these two requirements are related because they both deal with the management of flight plans for UAVs. The first requirement specifies that a managed list of pending flight plans should be maintained for each UAV, while the second requirement states that by default, the pending flight plans of a UAV should be serviced in FCFS order (i.e., the first flight plan in the queue is executed before any other flight plans). Therefore, these two requirements are related because they both involve managing and scheduling flight plans for UAVs.","8a54438b-4fc0-32d8-bbb1-180fd2bd229e":"Yes, these two requirements are related because they both involve the UI middleware and its functionality. The first requirement asks for a list of all saved flight routes, while the second requirement asks for the ability to create new flight routes. Therefore, the UI middleware is responsible for providing this information and creating new routes, which means that the two requirements are related.","34316b04-be45-3b2e-853d-5f2e54ddd8ae":"Yes, these two requirements are related because the first requirement mentions \"predefined FlightPatterns\" which is used in the second requirement to expand into a set of waypoints and synchronization points for each of the participating UAVs.","1f9cb06f-9515-3ad1-9483-9cd84e91e92c":"Yes, these two requirements are related because they both involve the GCS (Ground Control Station) and the GCS Middleware. The first requirement states that the GCS shall forward commands sent from Dronology to a GCS, while the second requirement states that the GCS shall send the UAV's current properties to the GCS Middleware when they are received from the UAV. Therefore, these two requirements are related because they both involve the GCS and the GCS Middleware in some way.","8388ea28-aeba-38d7-a7f7-a0ce1c88a6e8":"Yes, these two requirements are related because they both involve the simulation of a battery and the movement of an unmanned aerial vehicle (UAV) in the internal simulator. The first requirement is focused on approximating the state of the battery, while the second requirement is focused on moving the UAV to the takeoff altitude corresponding to its current longitude and latitude. Both requirements are related because they both involve the simulation of a system that includes a battery and an UAV, and therefore require similar knowledge and understanding of the underlying systems and processes.","85944bee-8ffe-348d-958f-7c08490cf615":"Yes, these two requirements are related because they both deal with the activation of UAVs. The first requirement establishes a maximum number of activated UAVs that can be reached, while the second requirement ensures that duplicate requests for UAV activation are rejected.","6ed558da-e419-38c7-a816-b4090223b135":"Yes, these two requirements are related because they both deal with cancelling missions. The first requirement states that when a mission is requested to be cancelled, the MissionPlanner shall cancel the active mission. The second requirement states that when a user requests to cancel a currently executing mission plan, all pending flight plans and synchronization points shall be removed. Both requirements are related because they both involve cancelling missions in some way or another.","8aebbd9c-9426-354d-ab2d-ca85e5930fb4":"No","b6432526-7ed6-3abe-9292-65c5e99edc85":"No","f27312a8-b6f7-31e7-b1ef-eb41c52a3937":"Yes, the two requirements are related because they both involve working with UAVs and their flight plans. The first requirement asks for details about a selected UAV's flight plan to be displayed, while the second requirement involves assigning routes to a selected UAV.","852e28ff-cec6-399c-8603-b51f7db0fe90":"Yes, the two requirements are related because they both involve the UAV returning to its original launch location. The first requirement specifies that the UAV should return home without detours, while the second requirement mentions RTL (return to launch) as a possible operation for the UAV.","15a5d6f1-0299-39f3-bccb-780b9977ae40":"Yes, these two requirements are related because they both involve the activation of UAVs. The first requirement states that only registered UAVs should be activated by the _UAVActivationManager_, while the second requirement specifies that if a presented UAV ID represents a currently registered UAV, then the _UAVActivationManager_ shall activate the UAV. Therefore, these two requirements are related because they both deal with the activation of UAVs and how they should be handled by the system.","3e8e4188-f512-3ad4-bf44-f4fd03593e1d":"Yes, these two requirements are related because the first requirement states that the GCSMiddleware shall forward commands sent from Dronology to a GCS, and the second requirement states that the GCS shall transform commands into a vehicle-specific format. Therefore, the GCS is responsible for both receiving and processing the commands, which means that it is involved in both requirements.","c2a6277c-ae48-3c9c-b27b-13ba31c14d1d":"No, these two requirements are not directly related. The first requirement specifies that the _MapComponent_ should support different types of map layers, while the second requirement specifies that when the _RealTimeFlightUI_ is loaded, a map shall be displayed with default zoom level and center coordinates specified in a configuration file. These two requirements do not mention each other or have any direct relationship.","5c2d6cd7-3d06-30aa-b802-92252d3a1d3e":"No","f4c6ff3d-7c31-37f9-be43-1ced854d3347":"Yes.","8eb4a068-9530-3edc-99b9-d1cfc9159ed3":"Yes, these two requirements are related because they both deal with the user interface (UI) of a software system that manages multiple Unmanned Aerial Vehicles (UAVs). The first requirement is focused on allowing users to perform emergency operations on groups of UAVs, while the second requirement is focused on displaying information about each activated UAV. Both requirements are related because they both involve the UI and its ability to provide users with the necessary tools and information to manage and operate multiple UAVs effectively.","cbd29c0b-4b43-3e07-a098-997b1cbfc029":"Yes","3276e59d-3900-344e-893e-1fea2c7544ab":"Yes.","c441ddae-96a2-356e-b3c7-64b30a36cc95":"Yes, these two requirements are related because they both deal with assigning routes to UAVs. The first requirement specifies that the _RouteAssignmentUI_ shall provide means to select an existing route and assign it to a UAV, while the second requirement describes how a route can be assigned to a selected UAV using the mouse to drag and drop or double click on the route.","27c7a3db-a6fe-3604-a706-0b6831614ffb":"Yes, these two requirements are related because they both involve the user interface (UI) and how it interacts with the system. The first requirement is about allowing users to apply flight operations to UAVs, while the second requirement is about applying emergency actions to UAVs in case of an emergency. Both requirements involve the UI as a means of interaction between the user and the system, so they are related.","8d168d80-a630-3fc0-8275-d896213c84c4":"Yes, these two requirements are related because they both deal with the activation of UAVs and their registration. The first requirement states that only registered UAVs can be activated, while the second requirement ensures that each UAV has a unique ID to prevent conflicts with other activated UAVs. Therefore, these two requirements work together to ensure that only properly registered and uniquely identified UAVs are activated by the system.","9e5de52a-0d5d-3454-98d0-31211fbc2de5":"Yes, these two requirements are related because they both deal with the validation of flight routes. The first requirement is specific to the UI middleware and ensures that only valid altitude and speed values are accepted for waypoints in a route. The second requirement is more general and applies to any flight route received from the UI middleware, regardless of its source. It checks that the flight route is a valid one by verifying that all waypoints are valid coordinates and that the flight route contains at least one waypoint.","d3faaa4b-dc63-3005-b510-865b33c405ad":"Yes, these two requirements are related because they both involve the creation and modification of routes. The first requirement specifies that the RouteCreationUI should allow users to create new routes, while the second requirement specifies that the same UI should also provide capabilities for modifying existing routes.","e2ef0f67-4500-38cf-aa92-6d817ab8cd45":"Yes, these two requirements are related because they both deal with the concept of returning to home. The first requirement specifies that the UAV should return to its original launch location without detours, while the second requirement states that when the UAV is commanded to return to home, it should remove any existing flight plan and create a new one containing only a single waypoint representing its original launch coordinates.","4daffa5c-38b7-31e7-8d93-122563fddfb4":"Yes, these two requirements are related because they both deal with displaying information about UAVs in some way. The first requirement asks that the UI display the name and status of all currently activated UAVs, while the second requirement asks that the UI display an icon on a map for each registered UAV based on its current location. Both requirements involve displaying information about UAVs in some way, so they are related.","499f4749-177e-31d1-aa27-ee2cbea6939e":"Yes, the two requirements are related. The first requirement defines how waypoints should be specified using coordinates that include longitude, latitude, and altitude. The second requirement specifies that the {{GOTO_WAYPOINT}} command shall include a target latitude, longitude, and altitude coordinate, which is consistent with the definition of waypoint in the first requirement.","6274c905-9d93-3237-9c7c-763db7e270c0":"Yes.","4c8c6ba4-0ee2-33d3-a9ab-f76b76d46f36":"Yes, these two requirements are related because they both involve coordinate systems and transformations. The first requirement is about converting between different coordinate systems, while the second requirement is about transforming coordinates from a specific format (p-vectors) to another format (the default representation).","4a7ee5bf-72aa-361f-8c66-c5e9be084f98":"Yes, these two requirements are related because they both refer to the same system, which is called \"ObjectAvoidance\". The first requirement specifies that when a stationary or moving object is within the proximity of a UAV, the ObjectAvoidance system shall issue evasive directives to the UAV. The second requirement states that the ObjectAvoidance system shall retrieve the state of the UAVs onboard ObjectAvoidance status. Therefore, these two requirements are related because they both involve the same system and its functionality.","e280593e-6990-3b2d-85bb-f358868488ca":"No, these two requirements are not related. The first requirement is for a simulation of takeoff in an internal simulator, while the second requirement is for a simulation of takeoff in NVECSimulator.","253cbb91-ad9f-325b-864f-19859deb4da1":"Yes, these two requirements are related because they both involve the UI and the UI middleware. The first requirement is asking for a list of active UAVs to be displayed in the UI, while the second requirement is asking for the UI to request information about all activated UAVs from the UI middleware upon loading. Therefore, these two requirements are related because they both involve the UI and the UI middleware working together to provide the user with a list of active UAVs.","da07329a-7f8c-3bc9-beca-5452d4442272":"Yes, these two requirements are related because they both deal with the concept of takeoff altitude in software development artifacts. The first requirement specifies that if a flight route requires a customized takeoff altitude that differs from the system's default takeoff altitude, it should be specified in the flight route. The second requirement mentions that the flight route xml format includes an optional takeoff altitude tag, which suggests that there is a way to specify the takeoff altitude in the flight route using this tag. Therefore, these two requirements are related because they both deal with the same concept of takeoff altitude and how it can be specified in software development artifacts.","1e588605-87b0-30dc-b9ac-5977f86fc99e":"Yes, these two requirements are related because they both involve communication between a Ground Control Station (GCS) and a Middleware system. The first requirement describes the protocol that the GCS shall use to communicate with the Middleware, while the second requirement describes how the GCS shall send UAV coordinates to the Middleware. Therefore, these two requirements are related because they both involve communication between the GCS and the Middleware.","cdfc8698-18d7-30eb-9c59-4c0ade2468a7":"Yes, these two requirements are related because they both deal with coordinate systems and their conversions. The first requirement is about converting between different coordinate systems, while the second requirement is about transforming coordinates from n-vectors to a default representation. Both of these requirements involve working with coordinate systems in some way, so they are related.","a2cc3a1a-3282-3db3-9e8f-17a2dd07d25d":"Yes, these two requirements are related because they both involve displaying information on a map in some way. The first requirement asks that a map be displayed when the _RealTimeFlightUI_ is loaded, while the second requirement asks that an icon be displayed for each registered UAV based on its current location on the map. Therefore, these two requirements are related because they both involve displaying information on a map in some way.","5040b694-45cd-3f34-af22-0e4e30bdc62a":"Yes, these requirements are related because they both deal with calculating directions and velocities in a CoordinateSystem. The first requirement specifies that the system should be able to calculate the direction from one coordinate to another, while the second requirement specifies that the direction between two coordinates should be specified using a velocity vector from the first coordinate.","e8a8d782-279a-3598-9f80-985d18623d8f":"Yes.","cfba0db8-45d4-3256-84b2-fe837252b67c":" No, these two requirements are not related. The first requirement is about configuring the VaadinUI when it is activated, while the second requirement is about scaling the map when it is loaded.","e4521580-4b5e-3704-aa74-3557a887aa11":"Yes.","a1c698ea-54c8-3777-9e14-268cd3978168":"Yes.","0084d6da-1eb5-34a7-9fd6-a2c7ad054348":"Yes.","faf89357-db9f-36c8-9edb-d0d404dfd5e5":"Yes, the two requirements are related because they both involve modifying or assigning routes to a UAV. The first requirement allows for reordering or removing flight plans assigned to a UAV, while the second requirement involves selecting a UAV and then assigning routes to it from an available route list.","c884a75c-f73d-3d31-b0e3-607407dea759":"Yes","a87616d3-8d47-3f87-8e2f-555c05ae9d35":"Yes, these two requirements are related because they both deal with the behavior of a UAV in the presence of objects. The first requirement specifies that the UAV should avoid objects while reaching its destination, while the second requirement states that once the UAV is no longer close to an object, it should continue towards its original destination.","e0add490-6aaf-3946-a1a5-90b58cf2d4d1":"Yes.","b0a6274f-03ba-3b78-815c-7c300fc7c22e":"No.","41fbbb3b-88ff-32d2-8339-9502d7474df0":"Yes, these two requirements are related because they both involve the use of a flight plan scheduler to manage the execution of flight plans for UAVs. The first requirement specifies that only one flight plan can be executed at a time for each UAV, while the second requirement requires the MissionPlanner to synchronize and coordinate the flights of multiple UAVs. Therefore, both requirements are related because they involve the use of a flight plan scheduler to manage the execution of flight plans for UAVs.","b966822d-c2d9-30c5-851d-07348ad78436":"No.","555a3e9b-0ed8-38cb-936c-e397d6ac59fe":"Yes, the two requirements are related because they both deal with the concept of flight routes and their relationship to mission plans. The first requirement defines a flight route as an ordered sequence of waypoints, while the second requirement states that each individual UAV in a mission plan shall have an ordered list of one or more flight routes assigned to it. Therefore, the two requirements are related because they both involve the use of flight routes and their relationship to mission plans.","ed06531e-6c14-3d13-a0ee-de0ae57a7ace":"Yes, these two requirements are related because they both deal with the functionality of the _DronologyRuntimeMonitor_ and how it provides monitoring messages to clients. The first requirement mentions that the monitor shall provide functionality to retrieve monitoring messages and distribute them to clients, while the second requirement mentions that the monitor shall provide means to define wildcards i.e. a client receives messages from all topics associated with the wildcard. Both requirements are related because they both involve the ability of the _DronologyRuntimeMonitor_ to provide monitoring messages to clients in different ways, such as by retrieving them and distributing them or by defining wildcards that allow clients to receive messages from multiple topics at once.","f147d636-d81c-3e4d-be6b-9339cd717a0d":"No, these two requirements are not related. The first requirement is for calculating distances between two coordinates, while the second requirement is for converting a coordinate system to a p-vector representation. These are two separate tasks that do not depend on each other.","cb1cf324-63d9-398d-b0f0-043f63aebd1b":"No","3a9d93e1-1a2e-3607-be0e-aee93f910a00":"No","6b943919-22a3-3392-bcf7-495104338d2c":"No, these two requirements are not directly related. The first requirement is about requesting the activation of a new UAV detected by the GCS, while the second requirement is about rejecting duplicate requests for UAV activation.","7c9280ed-95f3-348d-94dd-6116aead303b":"Yes","570fe035-9459-34a8-a9e7-7358554ed23a":"No.","00aa6a26-d2de-32f1-9eb8-2cf5d3ff8bfa":"Yes.","91e265a0-1513-3dee-b40a-1f438fe2505d":"Yes, these two requirements are related because they both involve the concept of uniqueness in some way. The first requirement states that each activated UAV shall have a unique ID assigned to it, while the second requirement requires an activation request for a UAV to be accepted only if the UAV provides an ID that is unique from all other currently activated UAVs. Therefore, these two requirements are related because they both involve ensuring that each UAV has a unique identifier.","5fd6c4cb-c57a-3ce1-8996-13997012185d":"Yes, the two requirements are related because they both refer to UAV operations. The first requirement mentions \"RealTimeFlightUI\" which is a user interface for controlling flight operations of one or more selected UAVs. The second requirement mentions \"RTL\", \"takeoff\", \"hover-in-place\", and \"resend command\" which are all flight operations that can be applied to the UAVs.","a658b0f9-4b8b-320e-813c-a758da353f44":"Yes, these two requirements are related because they both involve the management of flight plans for UAVs. The first requirement states that when a UAV is deactivated, all current and scheduled flight plans should be canceled, while the second requirement states that a flight plan shall be unassigned from a UAV by removing it from the UAV's flight plan queue. Therefore, these two requirements are related because they both involve the management of flight plans for UAVs.","4719ff2a-a42c-3367-8de8-8ad3a302fe39":"Yes, these two requirements are related because they both involve the display of information on a map. The first requirement specifies that the _RealTimeFlightUI_ shall display the location of active UAVs as icons on the map, while the second requirement specifies that when the _RealTimeFlightUI_ is loaded, a map shall be displayed with the default zoom level and center coordinates specified in a configuration file. Therefore, these two requirements are related because they both involve the use of maps in some way.","2feaad59-8d22-3691-85e3-8b5728fa9591":"Yes, these two requirements are related because they both involve the VehicleCore and its interaction with the UAV. The first requirement states that the VehicleCore shall send the next waypoint to the UAV during flight plan execution, while the second requirement states that the VehicleCore shall compute the current distance to the target waypoint when it receives the UAV's current coordinates and if the UAV has an assigned target waypoint. Therefore, these two requirements are related because they both involve the VehicleCore's role in managing the flight plan and calculating distances between waypoints.","296eec16-80f6-37fc-a86a-b81465b0db10":"Yes, these two requirements are related because they both involve the persistence and retrieval of flight routes. The first requirement specifies that the FlightRouteManager shall persist flight routes, while the second requirement specifies that when the UIMiddleware requests a flight route identified by its unique name, the FlightRouteManager shall retrieve the associated file. Therefore, these two requirements are related because they both involve the management and retrieval of flight routes.","832e8e3c-1d73-3ea3-aaea-d558f30bff5f":"Yes, these two requirements are related because they both deal with the behavior of the UAV during a \"hover in place\" command. The first requirement states that the UAV should maintain its position while it is hovering in place, and the second requirement states that when the hover in place command is rescinded, the UAV's state should be reverted to its previous state. Therefore, these two requirements are related because they both involve the behavior of the UAV during a \"hover in place\" command.","a7fceffb-e7e6-3396-8206-4afa4cb3dfca":"Yes.","2761eda5-1528-3caf-93aa-eaba68c7e0eb":"No, these two requirements are not directly related. The first requirement is about allowing reconnection of a GCS to an UAV after disconnecting, while the second requirement is about what happens when a socket error or time-out occurs and all UAVs associated with the GCS shall be deactivated.","fb6a0fa2-ca84-3637-93ca-c54c910e4b33":"Yes.","86f97e3a-ebde-3216-8990-effc7be26434":"Yes, these two requirements are related because the first requirement is about simulating the behavior of a virtual UAV, which is a key component of supporting internally simulated UAVs.","261454cb-964b-3b97-a7c0-f87b34eb4016":"Yes, these two requirements are related. The first requirement states that when a route is assigned or removed from a UAV, the UI Middleware shall be notified of the change. This notification is necessary for the second requirement, which requires that the route information be represented using the Standard Route XML format and transmitted to the UI Middleware. Therefore, these two requirements are related because they both involve the transmission of route information from the UAV to the UI Middleware.","9003980e-c77c-3f9e-bc6e-1af4b4595d24":"Yes, these two requirements are related because they both involve working with a map in some way. The first requirement asks for a map to be displayed in the UI, while the second requirement asks for the UI to periodically request and update UAV locations on the map. Therefore, these two requirements are related because they both involve working with maps in some way.","305ccde8-ea75-3ca1-99f7-2ad002c062a0":"Yes, these two requirements are related because they both involve the activation of a UAV by the GCS (Ground Control Station). The first requirement states that when the GCS requests activation of an additional UAV detected by the GCS, the GCSMiddleware shall forward the request to Dronology. This implies that the GCS is responsible for detecting and activating new UAVs, which is consistent with the second requirement that an activation request for a UAV received from the GCSMiddleware is only accepted if the UAV provides an ID unique from all other currently activated UAVs.","214b1ade-16cd-3b80-89fe-542f8d5ca1a2":"Yes, these two requirements are related because they both deal with Mission Planning, which is a critical aspect of software development in the context of unmanned aerial vehicles (UAVs). The first requirement states that the _MissionPlanner_ shall execute flight plans for multiple UAVs concurrently, while the second requirement specifies that when a predefined FlightPattern is included in a MissionPlan, it shall be expanded prior to use into a set of waypoints and synchronization points for each of the participating UAVs.\n\nTherefore, these two requirements are related because they both involve the planning and execution of missions for multiple UAVs, which is a key aspect of software development in this context.","d9b0c2f1-ed18-3be9-b304-db6e29a818a5":"Yes, these two requirements are related because they both involve assigning a unique identifier to a UAV. The first requirement states that the VehicleCore shall assign a unique ID to each activated UAV, while the second requirement states that an internally simulated UAV is instantiated with an ID that is unique from the IDs of all other currently activated UAVs. Both requirements are concerned with ensuring that each UAV has a unique identifier, which is important for tracking and managing multiple UAVs in a system.","fbb66ce1-7409-37a8-b5e0-b346ca604fb4":"No, these two requirements are not related. The first requirement is for a simulation of a goto command, while the second requirement is for a simulation of travel to a target location.","cafbcc71-923a-37f7-87c2-085e78f824f1":"Yes, these two requirements are related because they both involve the use of the UI Middleware component. The first requirement mentions that the _UAVRegistrationManager_ shall store UAV meta-data information, which suggests that it is responsible for managing and storing data related to UAVs. The second requirement mentions that a client shall register with the _UIMiddleware_ to receive notifications whenever a new UAV type configuration is created, modified, or deleted. This implies that the UI Middleware component is responsible for managing and distributing these notifications to clients who have registered for them. Therefore, these two requirements are related because they both involve the use of the UI Middleware component in some way.","724e45b2-69fb-3d61-9bf0-9f770d2a9182":"Yes, these two requirements are related because the first requirement mentions \"flight patterns\" and the second requirement mentions \"FlightPattern\".","31ecc52f-bb38-32ae-87c0-6d938f47a24d":"No, the two requirements are not related. The first requirement is about distinguishing key waypoints in a route, while the second requirement is about indicating the completion status of a route.","1c3a85d5-db05-3ebc-a59c-c59a09cdf63a":"Yes, these two requirements are related because they both involve the simulation of a virtual UAV and its behavior. The first requirement is about approximating the behavior of a UAV in an internal simulator, while the second requirement is about changing the current altitude of the UAV to the ground altitude when given a land command. Both requirements are concerned with the simulation of the UAV's behavior and movement within the internal simulator.","1044fc3e-3e33-3231-b072-80214bdf6aa6":"Yes, these two requirements are related because they both involve the persistence of flight routes. The first requirement states that the _FlightRouteManager_ shall persist flight routes, while the second requirement specifies that when a flight route is uploaded to Dronology, it should be saved under a unique name as an XML file by the _FlightRouteManager_.","fcfb4627-6820-306d-accc-8b665ad2489a":"Yes, these two requirements are related because they both involve the assignment of routes to UAVs. The first requirement is about automatically assigning routes to UAVs without manual intervention, while the second requirement is about assigning a list of waypoints from a route to an active UAV in order to create a flight plan. Both requirements are concerned with the same aspect of software development: the assignment of routes to UAVs.","4be483e1-89bc-394f-b3e6-e26e8280590c":"Yes, these two requirements are related because they both involve the GCS (Ground Control Station) and the GCS Middleware. The first requirement states that the GCS Middleware shall handle state messages, monitoring messages, and mode change messages received from an GCS, while the second requirement states that the GCS shall send the UAV's current coordinates to the GCS Middleware when they are received from the UAV. Therefore, these two requirements are related because they both involve the GCS and the GCS Middleware in some way.","7831ded0-2178-364c-b82b-ac50d7ff8632":"No","f1c85ef8-b979-3d87-96ef-b1c69c93ba85":"No, these two requirements are not related. The first requirement is about displaying a map in the user interface (UI), while the second requirement is about requesting information about active Unmanned Aerial Vehicles (UAVs) from the UI middleware.","a04ac72e-6467-3a35-9da8-1d4143e2c71d":"Yes, these two requirements are related because they both involve the use of a flight plan scheduler (SingleUAVFlightPlanScheduler) to manage the assignment and execution of flight plans for UAVs. The first requirement states that when a UAV completes its current flight plan, it should be assigned a new flight plan based on the previous flight plan's completion. This requires the use of the flight plan scheduler to execute the next assigned flight plan. On the other hand, the second requirement states that when a flight plan is assigned to a specific UAV, it should be placed in the UAV's execution queue. This also involves the use of the flight plan scheduler to manage the assignment and execution of flight plans for UAVs. Therefore, these two requirements are related because they both involve the use of the same flight plan scheduler component.","615a8e2d-8c78-3ae6-8440-24f99be82c23":"Yes, these two requirements are related because they both deal with displaying information about routes in some way. The first requirement asks for a list of existing routes to be displayed, while the second requirement asks for the UI to display active route details, which includes waypoints and their connections. Therefore, these two requirements are related because they both involve displaying information about routes in some way.","512ddd81-47e8-36ad-bec6-cfaa8545d2c4":"Yes, these two requirements are related because they both deal with deleting routes in the RouteCreationUI. The first requirement specifies that the UI should allow a user to delete a route, while the second requirement specifies that when the user presses the route delete button, a confirmation message shall be displayed and if confirmed by the user then the route shall be deleted.","97048cd9-7ee4-301e-8b38-d4a6ab016f09":"Yes, the two requirements are related because they both involve assigning a type to a UAV. The first requirement specifies that each UAV should have a unique type assigned to it, while the second requirement defines the predefined types of Virtual and Physical drones.","ce318291-9399-36d3-b297-ddd9f45ccb7b":"Yes, these two requirements are related because they both involve the _RouteCreationUI_ and its functionality. The first requirement specifies that the UI should allow users to create and modify routes, while the second requirement specifies that the UI should support route creation and modification in tabular mode by displaying an editable table showing each waypoint and the velocity of the UAV approaching the waypoint.","8483ba3f-51a5-32f2-b931-7213fe5c5a56":"Yes, these two requirements are related because they both involve the GCS transmitting information to the GCSMiddleware. The first requirement states that the GCS shall transmit the UAV's current location to the GCSMiddleware, while the second requirement states that the GCS shall send the UAV's current properties to the GCSMiddleware when they are received from the UAV.","80a13a1e-e583-3cd0-82c9-f305535d6173":"Yes, these two requirements are related because they both deal with the visual representation of flight routes in a software application. The first requirement defines how a flight route is represented as an ordered sequence of waypoints, while the second requirement specifies that the color of each waypoint should be different to distinguish between the starting and ending waypoints. Therefore, these two requirements are related because they both impact the visual representation of flight routes in some way.","4fc8da83-4ef1-31a4-936e-23df6e0935c0":"No, these two requirements are not directly related. The first requirement states that if a flight plan is active and the \"hover in place\" command is rescinded, the FlightManager shall notify the UAV to continue to the originally designated waypoint. This means that the UAV will continue on its current path after the hover in place command is rescinded.\n\nThe second requirement states that when the hover in place command is rescinded, the UAV's state is reverted to its previous state. This means that if the UAV was previously flying towards a waypoint, it will now return to that waypoint after the hover in place command is rescinded.\n\nIn summary, these two requirements are not directly related because they describe different actions that the UAV should take depending on whether the \"hover in place\" command is rescinded or not.","300edf8f-9714-302e-893f-5924e9f8cc3e":"Yes, these two requirements are related because they both deal with the user interface (UI) of a software system that is responsible for creating and modifying routes. The first requirement specifies that the UI shall allow the user to create and modify routes, while the second requirement specifies that the UI shall provide respective fields for displaying and modifying route information such as ID, textual description, waypoints, and other route-related data. Therefore, these two requirements are related because they both involve the same aspect of the software system's functionality: the user interface.","1e13d949-49ce-3c5b-b5a8-04d15ef61edb":"Yes, these two requirements are related because they both involve the use of a middleware component called GCSMiddleware. The first requirement states that the GCSMiddleware should be able to connect multiple GCS (Ground Control Stations) to Dronology via Middleware, while the second requirement states that the GCSMiddleware should be able to handle multiple groundstations registering with Dronology at the same time. Therefore, these two requirements are related because they both involve the use of the GCSMiddleware component in different ways.","ac178e15-afcd-31ba-b207-81f591ce2054":"Yes, these two requirements are related because they both deal with the user interface (UI) of a software system that manages and displays information about unmanned aerial vehicles (UAVs). The first requirement asks for the UI to display activated UAVs, while the second requirement asks for the UI to display information about each activated UAV. Therefore, these two requirements are related because they both involve the same user interface and its functionality.","2d0f3199-15ea-387c-9664-d431dddd7db2":"No, these two requirements are not related. The first requirement is about assigning flight routes during hover in place mode for a UAV, while the second requirement is about assigning routes to a UAV from an available route list.","974f817f-c096-3bc3-b8f5-dfafa5b7aaa9":"Yes, these two requirements are related because they both involve displaying information about UAVs on a map. The first requirement states that the _RealTimeFlightUI_ shall allow users to follow one or multiple UAVs on the map, while the second requirement states that when the map is loaded and the all active UAVs list is obtained, the _UIRealTimeFlightView_ shall display an icon on the map for each registered UAV based on its current location. Therefore, both requirements are related to displaying information about UAVs on a map.","d03b1ba6-756c-3497-bb1d-7b486e22b57a":"Yes, these two requirements are related because they both involve the _FlightRouteManager_ and the _UIMiddleware_. The first requirement is about ensuring that all flight routes are valid, while the second requirement is about retrieving a specific flight route identified by its unique name.","40598142-5528-3fd1-a1ca-541dc1a7a798":"Yes.","2b6fd901-9da3-3ff1-aec2-42d52fad361b":"No, these two requirements are not related. The first requirement is for a component called _CoordinateSystem_, which is responsible for calculating directions between coordinates. The second requirement is for a component called _VehicleCore_, which is responsible for computing the distance to a target waypoint based on the UAV's current coordinates and assigned target waypoint. These two components are not related, as they serve different purposes in the software development process.","0e49c88c-a94e-3baa-9b4d-8b0104fb4a6d":"Yes, the two requirements are related because they both deal with the waypoints in a software development artifact. The first requirement specifies that each waypoint should be defined using coordinates that include longitude, latitude, and altitude, while the second requirement specifies that all waypoints should be specified using degrees of longitude and latitude using Decimal Degrees format. Therefore, both requirements are related because they provide specifications for how to define and specify waypoints in a software development artifact.","444ba7ee-c6b4-380e-978b-50d1d5739725":"Yes.","15591117-31fb-3177-844a-ffc024d6267b":"Yes.","6e704e77-6569-3eaa-83b8-5bd745a1c34b":"No, these two requirements are not related. The first requirement is about loading configuration parameters for the VaadinUI component, while the second requirement is about displaying a map in the RealTimeFlightUI component.","4ed2ad0c-807d-36ed-97fc-4424d716dccd":"Yes, these two requirements are related because they both deal with ensuring that only one instance of each registered drone is active at any time. The first requirement states that there can be only one instance of each registered drone active at any time, while the second requirement states that if a presented UAV ID represents a currently registered UAV, then the _UAVActivationManager_ shall activate the UAV.","568f982c-36e5-35ad-9800-5814d4b11694":"Yes, these two requirements are related because they both deal with the concept of flight patterns and how they should be implemented in a system that involves multiple UAVs. The first requirement describes the format for documenting flight patterns, while the second requirement outlines the specific implementation details for synchronized takeoff using flight patterns.","a3999fac-f1eb-38ba-931b-f7bafc8a8b30":"Yes.","bb72ccd3-09d9-349b-b548-aab8f4471f26":"Yes, these two requirements are related because they both deal with the management of flight plans for UAVs. The first requirement mentions a managed list of pending flight plans, which suggests that there is some kind of centralized management system in place to handle and prioritize flight plans. The second requirement mentions assigning flight plans to specific UAVs, which implies that there is a need to manage the assignment of flight plans to individual UAVs. Therefore, these two requirements are related because they both involve the management of flight plans for UAVs.","680b08ff-76e1-3ce7-92f5-07a772a3f7cd":"Yes, these two requirements are related because they both refer to the same artifact (the UI middleware) and its functionality. The first requirement describes the ability of the UI middleware to modify flight routes, while the second requirement specifies that the UI middleware should support modifying an existing flight route with a given ID. Therefore, these two requirements are related and describe different aspects of the same feature or functionality.","9974c5d3-8655-3c7c-bbf4-423315783d7d":"Yes.","68fbe103-4e87-3296-b851-1638186edd21":"Yes, these two requirements are related because they both deal with the assignment of routes to UAVs. The first requirement mentions the _RouteAssignmentUI_ and the second requirement mentions the _UIMiddleware_, which suggests that there is a connection between these two components in the software development artifacts.","4a9d9452-1cf2-3688-94b4-bcc7921e5313":"Yes, these two requirements are related because they both involve the UI Middleware and its interaction with the user interface. The first requirement requires that the RouteAssignmentUI display details about a selected UAV and its flight plans, which involves retrieving information from the UI Middleware. The second requirement requires that when routes are assigned to a UAV, a request be sent to the UIMiddleware to update the assignment in Dronology, which also involves interacting with the UI Middleware. Therefore, these two requirements are related because they both involve the UI Middleware and its interaction with the user interface.","7de9bf45-3452-3755-adbf-aceb026a74ef":"Yes, these two requirements are related because they both deal with ensuring that only one instance of each registered drone is active at any time. The first requirement states that the _UAVActivationManager_ shall ensure that only one instance of each registered drone is active at any time, while the second requirement requires unique ID for UAV activation, which is necessary to ensure that only one instance of each registered drone is activated at a time.","4f077555-df8e-3d34-9627-e1fb20023a1e":"Yes, these two requirements are related. The first requirement states that when the VaadinUI is activated, it should be configured according to stored configuration parameters. The second requirement provides more detail about what those configuration parameters are and where they are stored (in a JSON object on the server).","12dfabdc-e9c2-3952-b333-c44b8b8c71bf":"No","31821ae9-c030-39cf-8e3e-06c88bb1c67a":"Yes, these two requirements are related because they both involve the _FlightRouteManager_. The first requirement ensures that all flight routes represent a valid flight route, while the second requirement saves flight routes as XML files. Therefore, the _FlightRouteManager_ is responsible for managing and storing flight routes, which makes it relevant to both requirements.","8f860a57-9e5a-3a60-bfca-a2eea1e49a2a":"Yes, these two requirements are related because they both involve the UI middleware and its interaction with the user interface. The first requirement asks for the display of details about the selected UAV and its flight plans, which requires the UI middleware to provide this information. The second requirement asks for the assignment of a list of waypoints from a route to an active UAV in order to create a flight plan, which also involves the UI middleware. Therefore, these two requirements are related because they both involve the UI middleware and its interaction with the user interface.","63332e13-1280-30d2-9d60-74af643c2266":"Yes, these two requirements are related because they both involve working with coordinate systems and converting between different representations of coordinates. The first requirement is asking for a way to calculate the direction between two points in a coordinate system, while the second requirement is asking for a way to transform coordinates from one representation (the default) to another representation (an n-vector).","02db4ea9-c63c-39d6-9ea9-fa76ff21220e":"Yes, these two requirements are related because they both involve the _RouteCreationUI_ and its functionality. The first requirement is about deleting a route, while the second requirement is about creating and modifying routes in visual mode. Both of these features are part of the same user interface component, so they are related.","e450ab93-b257-3792-b70e-5e45add2994f":"Yes, these two requirements are related because they both involve the _RouteCreationUI_ component. The first requirement is asking for a feature to delete a route, while the second requirement is asking for a feature to create and modify routes in tabular mode. Both of these features will be implemented within the same user interface, which is the _RouteCreationUI_. Therefore, they are related requirements.","74e5aaed-bbca-3825-b40b-8bbcf7c52968":"Yes, these two requirements are related because they both involve the _RouteCreationUI_ and its functionality. The first requirement states that the UI shall allow the user to create and modify a route, while the second requirement specifies that the UI shall support route creation and modification in visual mode, allowing the user to click on a location to create, modify, or delete a waypoint.","7e2f864b-d37b-3c6a-92f0-a81f07024684":"Yes, these two requirements are related because they both deal with the user interface (UI) of a real-time flight system. The first requirement is focused on displaying the location of active UAVs as icons on a map, while the second requirement is focused on providing information about each activated UAV, such as its longitude, latitude, altitude, ground speed, and battery level. Both requirements are important for ensuring that the UI provides a clear and accurate representation of the system's state and allows users to make informed decisions based on the available data.","b912a374-3315-3448-8034-35244e7ee842":"Yes.","ed05cead-94e3-39ed-b092-e292e662245d":"Yes.","53be6499-7dd1-34ef-8af1-557bb8d177d2":"Yes, these two requirements are related because they both involve the transmission of route assignments and removals from a UAV to the UI Middleware.","38d1ea0a-a50a-3327-b7c7-307935042e54":"Yes.","8b19e15b-2f5a-312d-ab8c-9f05beb6c410":"Yes.","17cb8815-9f8d-320c-9b44-e8246325b954":"Yes.","c239d1de-82c5-3dd6-a9cd-ba73aba34660":"Yes.","cee397cd-717a-3bbc-b0c3-6a11477c5d8a":"Yes, these two requirements are related because they both involve the use of the UIMiddleware component in some way. The first requirement states that if a client registers for notifications, the UIMiddleware shall send notifications for specific events, while the second requirement states that a client shall register with the UIMiddleware to receive notifications whenever UAV instances are activated or deactivated. Therefore, these two requirements are related because they both involve the use of the UIMiddleware component in some way.","fae614fb-49f8-3ca2-8e53-285e90acf044":"Yes, these two requirements are related. The first requirement states that the UI accepts mission plans and activates them upon request, while the second requirement states that a client shall register with the UIMiddleware to receive notifications whenever a new flight plan is activated or executed. Both requirements involve the UIMiddleware, which is a component that manages the communication between the UI and other components in the system. Therefore, these two requirements are related because they both involve the UIMiddleware and its role in managing the flow of mission plans and flight plans within the system.","ec8a5d20-fcbd-3d75-ae45-cedcad61134c":"No, these two requirements are not related. The first requirement is for a simulation of takeoff in an external environment, while the second requirement is for a simulation of takeoff in an internal simulator.","25ce5eb3-bb51-3018-af2c-6b5184d028fa":"Yes.","36c56b12-5f3b-3fe3-842f-320a77b4b9e6":"No, these two requirements are not related. The first requirement is about assigning new flight plans to a UAV when it completes its current flight plan, while the second requirement is about the default sequencing of UAV's flight plans.","e7ab155c-5168-3451-9c81-73812035a94a":"No.","1c946c8e-1c57-3a1a-99f8-5e9f9feec025":"Yes, these two requirements are related because they both deal with the user interface (UI) of a software system that is responsible for creating routes. The first requirement specifies that the UI should distinguish between different types of waypoints, such as starting, ending, and intermediate points, while the second requirement requires the UI to provide fields for displaying and modifying route information, including ID, textual description, waypoints, and other relevant details. Therefore, these two requirements are related because they both involve the user interface of a software system that is responsible for creating routes.","fffad1ba-b2f8-3bd6-9294-8aada11356fd":"No","5deb4d91-c003-36b5-b0ac-9fb67063eaf9":"Yes.","02827143-6894-36e7-91ba-7a9da59b7f3a":"Yes, the two requirements are related because they both involve the UI middleware handling control of UAVs. The first requirement states that only one UI client can control a UAV at a time, while the second requirement states that the UI middleware shall forward control requests from UI clients to hold a control lock on a UAV. Therefore, the two requirements are related because they both involve the UI middleware handling control of UAVs and ensuring that only one UI client can control a UAV at a time.","191eda9b-d8f1-3b04-a9e9-6bba53b01aa5":"Yes, these two requirements are related because the first requirement is about scheduling a flight plan for a single UAV, and the second requirement is about assigning waypoints from a route to an active UAV in order to create a flight plan. The two requirements are related because they both involve the creation of a flight plan for a UAV, which requires the assignment of waypoints to the UAV.","f638aab8-671a-3085-8f5b-064fd075255a":"Yes, these two requirements are related because they both involve the UI middleware and its interaction with clients. The first requirement states that the UI middleware shall provide an interface for registering UI clients, while the second requirement states that a client shall register with the UI middleware to receive UAV type specification events. Therefore, these two requirements are related because they both deal with the registration of clients with the UI middleware and the handling of UAV type specification events.","eb441e37-9d66-3627-9b32-151b2b9337f9":"Yes, these two requirements are related because both of them deal with the connection to the GCS from the GCSMiddleware and its impact on UAVs. The first requirement states that when the connection is lost, the GCSMiddleware shall notify Dronology and deactivate all associated UAVs, while the second requirement states that when a socket error or time-out occurs, all UAVs associated with the GCS shall be deactivated.","7ddaab64-7220-3812-bd89-7d5452990f18":"Yes.","2e2e742a-8c4a-3cc2-9091-531a4dcacc1e":"Yes, these two requirements are related because they both involve the _UAVActivationManager_ and its interaction with other components in the system. The first requirement specifies that the manager should only activate UAVs that are registered, while the second requirement specifies that when receiving a new activation request from the GCS Middleware, the manager should check that the presented UAV ID represents a currently registered and non-activated UAV. Therefore, these two requirements are related because they both involve the _UAVActivationManager_'s role in ensuring that only authorized and eligible UAVs are activated.","d08c1bdf-8c87-3072-9607-1f675074522d":"Yes, the two requirements are related because they both refer to the same user action of cancelling a pending flight plan. The first requirement specifies that when a user cancels a pending flight plan, the RouteAssignmentUI shall notify Dronology, while the second requirement states that each UAV shall have a cancel pending flight plan button associated with it. Therefore, both requirements are related because they both deal with the same user action of cancelling a pending flight plan and how it should be handled by the system.","3ea79e0b-4ae9-3d86-9f3d-f8e89ae2c62d":"Yes.","3d811f68-1810-3809-b67d-cfdd1335fd45":"Yes.","bb4636ed-9be3-3009-9942-1e0c8785fd55":"Yes, these two requirements are related because they both deal with the topic of monitoring and forwarding messages in the DronologyRuntimeMonitor. The first requirement specifies that when a new monitoring message is received, it should be forwarded to all subscribed clients, while the second requirement provides means for defining wildcards, which can be used to receive messages from all topics associated with the wildcard.","a10628ab-3df3-3558-9337-bb78f273388b":"Yes, these two requirements are related because they both deal with displaying information on a map. The first requirement asks for the display of active routes, while the second requirement asks for the display of assigned routes at the top of the list of pending flight plans. Both requirements involve displaying information on a map and therefore are related.","63159dd4-138f-3a8b-b71d-cd9b1112b5f7":"Yes, these two requirements are related because they both deal with the execution of flight plans for UAVs. The first requirement states that the _SingleUAVFlightPlanScheduler_ shall only execute one flight plan at a time for each UAV, while the second requirement states that each UAV can only store one currently executing flight plan ID. These requirements are related because they both involve the management of multiple flight plans and ensuring that only one flight plan is executed at a time for each UAV.","c2ec11ec-6812-3181-bb83-6b9ccfb7ed1e":"Yes","ddc8380b-0d82-3ce0-9098-d157f436846b":"No","2731d965-6678-367e-acd2-e8c19e7259fd":"Yes, these two requirements are related because they both deal with the return to home functionality of the UAV. The first requirement states that when a \"return to home\" command is issued, the UAV should return to its original launch location without issuing any additional waypoint or routing commands. The second requirement states that when a UAV is issued a return-to-home command during a flight, the current flight plan is aborted and all scheduled flight plans are removed from its flight plan queue. This means that if the UAV is already following a flight plan when it receives a \"return to home\" command, it should abort the current flight plan and return to its original launch location without any further waypoint or routing commands. Therefore, these two requirements are related because they both deal with the same functionality of the UAV returning to its original launch location after receiving a \"return to home\" command.","86154288-10e3-3200-abd2-35de02e2fc43":"Yes, these two requirements are related because they both involve changes to the flight plans of an Unmanned Aerial Vehicle (UAV). The first requirement states that if a request is made to cancel the active plan of an UAV, the scheduler shall abort the currently executing flight plan. This implies that there must be an active flight plan in progress that can be aborted.\n\nThe second requirement states that a flight plan shall be unassigned from a UAV by removing it from the UAV's flight plan queue. This implies that there is a flight plan queue associated with each UAV, and that the flight plans in this queue must be removed in order to unassign them from the UAV.\n\nTherefore, these two requirements are related because they both involve changes to the flight plans of an UAV, and they both require the use of a flight plan queue.","d217f4ba-6f71-3374-a6bb-da75e3696bd2":"No","c8ee4056-8aae-3776-bdc1-30fd05b8c843":"Yes, these two requirements are related because they both deal with the simulation of landing in an internal simulator for a UAV. The first requirement specifies that when given a landing command, the _InternalSimulator_ shall move the UAV from its current altitude to the ground altitude corresponding to its current longitude and latitude. The second requirement specifies that when given a land command, the _InternalSimulator_ shall immediately change the UAV's current altitude to the ground altitude. Both requirements are related because they both involve simulating landing in an internal simulator for a UAV.","c433fcf2-c3cd-3161-a309-581afc7c22c7":"Yes, these two requirements are related because they both involve the removal of a flight plan from a UAV. The first requirement states that if requested, the SingleUAVFlightPlanScheduler shall unassign the flight plan assigned to a UAV that is awaiting execution, while the second requirement states that a flight plan shall be unassigned from a UAV by removing it from the UAV's flight plan queue. Both requirements involve the removal of a flight plan from a UAV, and therefore they are related.","c3f9bea3-8b43-31fc-a7cf-da8c64dc2405":"No","e4279de1-1e5e-35a4-a210-acd6de221472":"Yes.","b6876206-dc35-3226-9650-c16ce27ddea8":"Yes.","ba9df6eb-2d48-3297-bfe5-e4175203d395":"Yes, these two requirements are related because they both involve the UI middleware and its role in managing user interface (UI) clients. The first requirement states that the UI middleware shall provide an interface for registering UI clients, while the second requirement states that a client shall register with the UI middleware to receive notifications whenever UAV instances are activated or deactivated. Therefore, these two requirements are related because they both involve the UI middleware and its role in managing UI clients and their interactions with the system.","d76f1e63-4991-3d1a-94a4-3aa17df577bf":"Yes.","a571a8b5-7809-387c-8fb2-f68a49063821":"Yes, these two requirements are related because they both involve the assignment of routes to UAVs. The first requirement is specifically about assigning a route to a specific UAV based on its ID, while the second requirement is more general and talks about assigning a list of waypoints from a route to an active UAV in order to create a flight plan.","58959d44-2858-3a3e-9fd5-e613c500d4c0":"Yes, these two requirements are related because they both deal with the user interface (UI) of a software system that manages UAVs. The first requirement asks for the UI to display information about the selected UAV's active flight plans, while the second requirement asks for the UI to display information about each activated UAV, such as its longitude, latitude, altitude, ground speed, and battery level. Both requirements are related because they both involve displaying information about UAVs in the UI, which is a common theme throughout the software system's functionality.","90c9d7ed-7ff8-350f-8aba-67bf7b3ee6f9":"Yes, these two requirements are related because they both involve the _ObjectAvoidance_ system and its capabilities. The first requirement is about the activation of collision avoidance, which requires the system to issue commands within the capabilities of the UAV. The second requirement is about retrieving the state of the UAVs onboard ObjectAvoidance status, which is also a capability of the _ObjectAvoidance_ system.","e2a5a4e4-8d98-3ca9-8e3a-7cb554957986":"Yes, these two requirements are related because they both involve the _RouteCreationUI_ and its functionality. The first requirement is focused on validating the altitude and speed values for waypoints, while the second requirement is focused on creating and modifying routes in visual mode using the _RouteCreationUI_.","c338fd1b-632f-3cf0-a64d-b3f993b63fe9":"Yes, these two requirements are related because they both involve the use of a software tool called Mission Planner to execute flight plans for multiple UAVs concurrently and synchronize their flights.","302e463d-1c10-35cc-9bae-ab2188bb427e":"Yes, these two requirements are related because they both involve the use of the GCSMiddleware and the UAVActivationManager. The first requirement states that when a GCS requests activation of an additional UAV detected by the GCS, the GCSMiddleware shall forward the request to Dronology. This implies that the GCSMiddleware is responsible for handling the communication between the GCS and Dronology. In the second requirement, the GCSMiddleware is called upon to call the UAVActivationManager to request UAV activation. This suggests that the GCSMiddleware is also responsible for managing the activation of UAVs. Therefore, these two requirements are related because they both involve the use of the GCSMiddleware and the UAVActivationManager in different but related ways.","d32ca940-5fa1-3fb0-960e-e87fa8ee408b":"Yes, these two requirements are related because they both involve the UI middleware and its ability to support route assignment to UAVs. The first requirement states that the UI middleware shall enable an existing route to be assigned to an active UAV, while the second requirement states that the UI middleware shall assign the list of waypoints from a route to an active UAV in order to create a flight plan. Therefore, these two requirements are related because they both involve the same functionality and are concerned with the same aspect of the software development artifacts."}